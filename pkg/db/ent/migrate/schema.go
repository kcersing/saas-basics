// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysApisColumns holds the columns for the "sys_apis" table.
	SysApisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "path", Type: field.TypeString, Comment: "API path | API 路径"},
		{Name: "description", Type: field.TypeString, Comment: "API description | API 描述"},
		{Name: "api_group", Type: field.TypeString, Comment: "API group | API 分组"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", Default: "POST"},
	}
	// SysApisTable holds the schema information for the "sys_apis" table.
	SysApisTable = &schema.Table{
		Name:       "sys_apis",
		Columns:    SysApisColumns,
		PrimaryKey: []*schema.Column{SysApisColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "api_path_method",
				Unique:  true,
				Columns: []*schema.Column{SysApisColumns[3], SysApisColumns[6]},
			},
		},
	}
	// CourseRecordCoachColumns holds the columns for the "course_record_coach" table.
	CourseRecordCoachColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "coach_id", Type: field.TypeInt64, Nullable: true, Comment: "教练ID"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "course_record_schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// CourseRecordCoachTable holds the schema information for the "course_record_coach" table.
	CourseRecordCoachTable = &schema.Table{
		Name:       "course_record_coach",
		Columns:    CourseRecordCoachColumns,
		PrimaryKey: []*schema.Column{CourseRecordCoachColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_record_coach_course_record_schedule_coachs",
				Columns:    []*schema.Column{CourseRecordCoachColumns[11]},
				RefColumns: []*schema.Column{CourseRecordScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "courserecordcoach_coach_id",
				Unique:  true,
				Columns: []*schema.Column{CourseRecordCoachColumns[4]},
			},
		},
	}
	// CourseRecordMemberColumns holds the columns for the "course_record_member" table.
	CourseRecordMemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员购买课ID"},
		{Name: "member_product_item_id", Type: field.TypeInt64, Nullable: true, Comment: "会员购买课ID"},
		{Name: "coach_id", Type: field.TypeInt64, Nullable: true, Comment: "教练ID"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "course_record_schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// CourseRecordMemberTable holds the schema information for the "course_record_member" table.
	CourseRecordMemberTable = &schema.Table{
		Name:       "course_record_member",
		Columns:    CourseRecordMemberColumns,
		PrimaryKey: []*schema.Column{CourseRecordMemberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "course_record_member_course_record_schedule_members",
				Columns:    []*schema.Column{CourseRecordMemberColumns[14]},
				RefColumns: []*schema.Column{CourseRecordScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "courserecordmember_member_id",
				Unique:  true,
				Columns: []*schema.Column{CourseRecordMemberColumns[4]},
			},
		},
	}
	// CourseRecordScheduleColumns holds the columns for the "course_record_schedule" table.
	CourseRecordScheduleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "place_id", Type: field.TypeInt64, Nullable: true, Comment: "场地ID"},
		{Name: "coach_id", Type: field.TypeInt64, Nullable: true, Comment: "教练ID"},
		{Name: "num", Type: field.TypeInt64, Nullable: true, Comment: "上课人数"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "课程价格", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
	}
	// CourseRecordScheduleTable holds the schema information for the "course_record_schedule" table.
	CourseRecordScheduleTable = &schema.Table{
		Name:       "course_record_schedule",
		Columns:    CourseRecordScheduleColumns,
		PrimaryKey: []*schema.Column{CourseRecordScheduleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "courserecordschedule_venue_id",
				Unique:  true,
				Columns: []*schema.Column{CourseRecordScheduleColumns[4]},
			},
		},
	}
	// SysDictionariesColumns holds the columns for the "sys_dictionaries" table.
	SysDictionariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "status 1 normal 0 ban | 状态 1 正常 0 禁用", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "the name of dictionary for search | 字典搜索名称"},
		{Name: "description", Type: field.TypeString, Comment: "the description of dictionary | 字典描述"},
	}
	// SysDictionariesTable holds the schema information for the "sys_dictionaries" table.
	SysDictionariesTable = &schema.Table{
		Name:       "sys_dictionaries",
		Columns:    SysDictionariesColumns,
		PrimaryKey: []*schema.Column{SysDictionariesColumns[0]},
	}
	// SysDictionaryDetailsColumns holds the columns for the "sys_dictionary_details" table.
	SysDictionaryDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "status 1 normal 0 ban | 状态 1 正常 0 禁用", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "key", Type: field.TypeString, Comment: "key | 键"},
		{Name: "value", Type: field.TypeString, Comment: "value | 值"},
		{Name: "dictionary_id", Type: field.TypeInt64, Nullable: true, Comment: "Dictionary ID | 字典ID"},
	}
	// SysDictionaryDetailsTable holds the schema information for the "sys_dictionary_details" table.
	SysDictionaryDetailsTable = &schema.Table{
		Name:       "sys_dictionary_details",
		Columns:    SysDictionaryDetailsColumns,
		PrimaryKey: []*schema.Column{SysDictionaryDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dictionary_details_sys_dictionaries_dictionary_details",
				Columns:    []*schema.Column{SysDictionaryDetailsColumns[7]},
				RefColumns: []*schema.Column{SysDictionariesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "dictionarydetail_key_dictionary_id",
				Unique:  true,
				Columns: []*schema.Column{SysDictionaryDetailsColumns[5], SysDictionaryDetailsColumns[7]},
			},
		},
	}
	// SysLogsColumns holds the columns for the "sys_logs" table.
	SysLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "type", Type: field.TypeString, Comment: "type of log | 日志类型"},
		{Name: "method", Type: field.TypeString, Comment: "method of log | 日志请求方法"},
		{Name: "api", Type: field.TypeString, Comment: "api of log | 日志请求api"},
		{Name: "success", Type: field.TypeBool, Comment: "success of log | 日志请求是否成功"},
		{Name: "req_content", Type: field.TypeString, Nullable: true, Comment: "content of request log | 日志请求内容", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "resp_content", Type: field.TypeString, Nullable: true, Comment: "content of response log | 日志返回内容", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "ip of log | 日志IP"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "user_agent of log | 日志用户客户端"},
		{Name: "operator", Type: field.TypeString, Nullable: true, Comment: "operator of log | 日志操作者"},
		{Name: "time", Type: field.TypeInt, Nullable: true, Comment: "time of log(millisecond) | 日志时间(毫秒)"},
	}
	// SysLogsTable holds the schema information for the "sys_logs" table.
	SysLogsTable = &schema.Table{
		Name:       "sys_logs",
		Columns:    SysLogsColumns,
		PrimaryKey: []*schema.Column{SysLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logs_api",
				Unique:  false,
				Columns: []*schema.Column{SysLogsColumns[5]},
			},
		},
	}
	// MemberColumns holds the columns for the "member" table.
	MemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "status 1 normal 0 ban | 状态 1 正常 0 禁用", Default: 1},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "user's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "password | 密码"},
		{Name: "nickname", Type: field.TypeString, Unique: true, Comment: "nickname | 昵称"},
		{Name: "mobile", Type: field.TypeString, Unique: true, Comment: "mobile number | 手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
	}
	// MemberTable holds the schema information for the "member" table.
	MemberTable = &schema.Table{
		Name:       "member",
		Columns:    MemberColumns,
		PrimaryKey: []*schema.Column{MemberColumns[0]},
	}
	// MemberProductColumns holds the columns for the "member_product" table.
	MemberProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "编号"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品ID"},
		{Name: "name", Type: field.TypeFloat64, Nullable: true, Comment: "产品名称"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "产品价格"},
		{Name: "validity_at", Type: field.TypeTime, Nullable: true, Comment: "生效时间"},
		{Name: "cancel_at", Type: field.TypeTime, Nullable: true, Comment: "作废时间"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberProductTable holds the schema information for the "member_product" table.
	MemberProductTable = &schema.Table{
		Name:       "member_product",
		Columns:    MemberProductColumns,
		PrimaryKey: []*schema.Column{MemberProductColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_member_member_products",
				Columns:    []*schema.Column{MemberProductColumns[11]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MemberProductPropertyColumns holds the columns for the "member_product_property" table.
	MemberProductPropertyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "spu_name", Type: field.TypeString, Nullable: true, Comment: "spu名"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "总时长"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "单次时长"},
		{Name: "count", Type: field.TypeInt64, Nullable: true, Comment: "总次数", Default: 0},
		{Name: "count_surplus", Type: field.TypeInt64, Nullable: true, Comment: "剩余次数", Default: 0},
		{Name: "spu_price", Type: field.TypeFloat64, Nullable: true, Comment: "定价"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员产品ID"},
	}
	// MemberProductPropertyTable holds the schema information for the "member_product_property" table.
	MemberProductPropertyTable = &schema.Table{
		Name:       "member_product_property",
		Columns:    MemberProductPropertyColumns,
		PrimaryKey: []*schema.Column{MemberProductPropertyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_property_member_product_member_product_propertys",
				Columns:    []*schema.Column{MemberProductPropertyColumns[11]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MemberProductPropertyVenueColumns holds the columns for the "member_product_property_venue" table.
	MemberProductPropertyVenueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "member_product_property_id", Type: field.TypeInt64, Nullable: true},
	}
	// MemberProductPropertyVenueTable holds the schema information for the "member_product_property_venue" table.
	MemberProductPropertyVenueTable = &schema.Table{
		Name:       "member_product_property_venue",
		Columns:    MemberProductPropertyVenueColumns,
		PrimaryKey: []*schema.Column{MemberProductPropertyVenueColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_property_venue_member_product_property_member_product_property_venues",
				Columns:    []*schema.Column{MemberProductPropertyVenueColumns[4]},
				RefColumns: []*schema.Column{MemberProductPropertyColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "menu_level", Type: field.TypeInt32, Comment: "menu level | 菜单层级"},
		{Name: "menu_type", Type: field.TypeInt32, Comment: "menu type | 菜单类型 0 目录 1 菜单 2 按钮"},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "index path | 菜单路由路径", Default: ""},
		{Name: "name", Type: field.TypeString, Comment: "index name | 菜单名称"},
		{Name: "redirect", Type: field.TypeString, Nullable: true, Comment: "redirect path | 跳转路径 （外链）", Default: ""},
		{Name: "component", Type: field.TypeString, Nullable: true, Comment: "the path of vue file | 组件路径", Default: ""},
		{Name: "order_no", Type: field.TypeInt32, Comment: "sorting numbers | 排序编号", Default: 0},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Comment: "disable status | 是否停用", Default: false},
		{Name: "title", Type: field.TypeString, Comment: "menu name | 菜单显示标题"},
		{Name: "icon", Type: field.TypeString, Comment: "menu icon | 菜单图标"},
		{Name: "hide_menu", Type: field.TypeBool, Nullable: true, Comment: "hide menu | 是否隐藏菜单", Default: false},
		{Name: "hide_breadcrumb", Type: field.TypeBool, Nullable: true, Comment: "hide the breadcrumb | 隐藏面包屑", Default: false},
		{Name: "current_active_menu", Type: field.TypeString, Nullable: true, Comment: "set the active menu | 激活菜单", Default: ""},
		{Name: "ignore_keep_alive", Type: field.TypeBool, Nullable: true, Comment: "do not keep alive the tab | 取消页面缓存", Default: false},
		{Name: "hide_tab", Type: field.TypeBool, Nullable: true, Comment: "hide the tab header | 隐藏页头", Default: false},
		{Name: "frame_src", Type: field.TypeString, Nullable: true, Comment: "show iframe | 内嵌 iframe", Default: ""},
		{Name: "carry_param", Type: field.TypeBool, Nullable: true, Comment: "the route carries parameters or not | 携带参数", Default: false},
		{Name: "hide_children_in_menu", Type: field.TypeBool, Nullable: true, Comment: "hide children menu or not | 隐藏所有子菜单", Default: false},
		{Name: "affix", Type: field.TypeBool, Nullable: true, Comment: "affix tab | Tab 固定", Default: false},
		{Name: "dynamic_level", Type: field.TypeInt32, Nullable: true, Comment: "the maximum number of pages the router can open | 能打开的子TAB数", Default: 20},
		{Name: "real_path", Type: field.TypeString, Nullable: true, Comment: "the real path of the route without dynamic part | 菜单路由不包含参数部分", Default: ""},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "parent menu ID | 父菜单ID"},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[24]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenuParamsColumns holds the columns for the "sys_menu_params" table.
	SysMenuParamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "type", Type: field.TypeString, Comment: "pass parameters via params or query | 参数类型"},
		{Name: "key", Type: field.TypeString, Comment: "the key of parameters | 参数键"},
		{Name: "value", Type: field.TypeString, Comment: "the value of parameters | 参数值"},
		{Name: "menu_params", Type: field.TypeInt64, Nullable: true},
	}
	// SysMenuParamsTable holds the schema information for the "sys_menu_params" table.
	SysMenuParamsTable = &schema.Table{
		Name:       "sys_menu_params",
		Columns:    SysMenuParamsColumns,
		PrimaryKey: []*schema.Column{SysMenuParamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menu_params_sys_menus_params",
				Columns:    []*schema.Column{SysMenuParamsColumns[6]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "source", Type: field.TypeString, Nullable: true, Comment: "订单来源", Default: ""},
		{Name: "device", Type: field.TypeString, Nullable: true, Comment: "设备来源", Default: ""},
		{Name: "completion_at", Type: field.TypeTime, Nullable: true, Comment: "订单完成时间"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "创建人id"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "order_member_id_order_sn",
				Unique:  true,
				Columns: []*schema.Column{OrderColumns[5], OrderColumns[3]},
			},
		},
	}
	// OrderAmountColumns holds the columns for the "order_amount" table.
	OrderAmountColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "total", Type: field.TypeFloat64, Nullable: true, Comment: "总金额"},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "pay", Type: field.TypeFloat64, Nullable: true, Comment: "实际付款"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderAmountTable holds the schema information for the "order_amount" table.
	OrderAmountTable = &schema.Table{
		Name:       "order_amount",
		Columns:    OrderAmountColumns,
		PrimaryKey: []*schema.Column{OrderAmountColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_amount_order_amount",
				Columns:    []*schema.Column{OrderAmountColumns[6]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderamount_order_id",
				Unique:  true,
				Columns: []*schema.Column{OrderAmountColumns[6]},
			},
		},
	}
	// OrderItemColumns holds the columns for the "order_item" table.
	OrderItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品id"},
		{Name: "quantity", Type: field.TypeInt64, Nullable: true, Comment: "购买数量", Default: 0},
		{Name: "related_user_product_id", Type: field.TypeInt64, Nullable: true, Comment: "关联会员产品id", Default: 0},
		{Name: "contract_id", Type: field.TypeInt64, Nullable: true, Comment: "合同ID", Default: 0},
		{Name: "assign_at", Type: field.TypeTime, Nullable: true, Comment: "指定时间"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderItemTable holds the schema information for the "order_item" table.
	OrderItemTable = &schema.Table{
		Name:       "order_item",
		Columns:    OrderItemColumns,
		PrimaryKey: []*schema.Column{OrderItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_order_item",
				Columns:    []*schema.Column{OrderItemColumns[8]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderitem_order_id",
				Unique:  true,
				Columns: []*schema.Column{OrderItemColumns[8]},
			},
		},
	}
	// OrderPayColumns holds the columns for the "order_pay" table.
	OrderPayColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "pay_sn", Type: field.TypeString, Nullable: true, Comment: "支付编号"},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "pay", Type: field.TypeFloat64, Nullable: true, Comment: "实际付款"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "操作人id"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderPayTable holds the schema information for the "order_pay" table.
	OrderPayTable = &schema.Table{
		Name:       "order_pay",
		Columns:    OrderPayColumns,
		PrimaryKey: []*schema.Column{OrderPayColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_pay_order_pay",
				Columns:    []*schema.Column{OrderPayColumns[7]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderpay_order_id",
				Unique:  true,
				Columns: []*schema.Column{OrderPayColumns[7]},
			},
		},
	}
	// OrderSalesColumns holds the columns for the "order_sales" table.
	OrderSalesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "sales_id", Type: field.TypeInt64, Nullable: true, Comment: "销售id"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderSalesTable holds the schema information for the "order_sales" table.
	OrderSalesTable = &schema.Table{
		Name:       "order_sales",
		Columns:    OrderSalesColumns,
		PrimaryKey: []*schema.Column{OrderSalesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_sales_order_sales",
				Columns:    []*schema.Column{OrderSalesColumns[4]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ordersales_order_id",
				Unique:  true,
				Columns: []*schema.Column{OrderSalesColumns[4]},
			},
		},
	}
	// ProductColumns holds the columns for the "product" table.
	ProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "编号"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "创建人id"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "商品名"},
		{Name: "pic", Type: field.TypeInt64, Nullable: true, Comment: "主图"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "详情"},
		{Name: "price", Type: field.TypeString, Nullable: true, Comment: "价格"},
		{Name: "stock", Type: field.TypeInt64, Nullable: true, Comment: "库存"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
	}
	// ProductTable holds the schema information for the "product" table.
	ProductTable = &schema.Table{
		Name:       "product",
		Columns:    ProductColumns,
		PrimaryKey: []*schema.Column{ProductColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "product_id_sn",
				Unique:  true,
				Columns: []*schema.Column{ProductColumns[0], ProductColumns[3]},
			},
		},
	}
	// ProductPropertyColumns holds the columns for the "product_property" table.
	ProductPropertyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "spu_name", Type: field.TypeString, Nullable: true, Comment: "spu名"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "总时长"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "单次时长"},
		{Name: "count", Type: field.TypeInt64, Nullable: true, Comment: "次数"},
		{Name: "spu_price", Type: field.TypeFloat64, Nullable: true, Comment: "定价"},
	}
	// ProductPropertyTable holds the schema information for the "product_property" table.
	ProductPropertyTable = &schema.Table{
		Name:       "product_property",
		Columns:    ProductPropertyColumns,
		PrimaryKey: []*schema.Column{ProductPropertyColumns[0]},
	}
	// ProductPropertyVenueColumns holds the columns for the "product_property_venue" table.
	ProductPropertyVenueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "product_property_id", Type: field.TypeInt64, Nullable: true},
	}
	// ProductPropertyVenueTable holds the schema information for the "product_property_venue" table.
	ProductPropertyVenueTable = &schema.Table{
		Name:       "product_property_venue",
		Columns:    ProductPropertyVenueColumns,
		PrimaryKey: []*schema.Column{ProductPropertyVenueColumns[0]},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "status 1 normal 0 ban | 状态 1 正常 0 禁用", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "role name | 角色名"},
		{Name: "value", Type: field.TypeString, Unique: true, Comment: "role value for permission control in front end | 角色值，用于前端权限控制"},
		{Name: "default_router", Type: field.TypeString, Comment: "default menu : dashboard | 默认登录页面", Default: "dashboard"},
		{Name: "remark", Type: field.TypeString, Comment: "remark | 备注", Default: ""},
		{Name: "order_no", Type: field.TypeInt32, Comment: "order number | 排序编号", Default: 0},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
	}
	// SysTokensColumns holds the columns for the "sys_tokens" table.
	SysTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, Comment: " User's ID | 用户的ID"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串"},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
		{Name: "user_token", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// SysTokensTable holds the schema information for the "sys_tokens" table.
	SysTokensTable = &schema.Table{
		Name:       "sys_tokens",
		Columns:    SysTokensColumns,
		PrimaryKey: []*schema.Column{SysTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_tokens_sys_users_token",
				Columns:    []*schema.Column{SysTokensColumns[7]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[3]},
			},
			{
				Name:    "token_expired_at",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[6]},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "status 1 normal 0 ban | 状态 1 正常 0 禁用", Default: 1},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "user's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "password | 密码"},
		{Name: "nickname", Type: field.TypeString, Unique: true, Comment: "nickname | 昵称"},
		{Name: "side_mode", Type: field.TypeString, Nullable: true, Comment: "template mode | 布局方式", Default: "dark"},
		{Name: "base_color", Type: field.TypeString, Nullable: true, Comment: "base color of template | 后台页面色调", Default: "#fff"},
		{Name: "active_color", Type: field.TypeString, Nullable: true, Comment: "active color of template | 当前激活的颜色设定", Default: "#1890ff"},
		{Name: "role_id", Type: field.TypeInt64, Nullable: true, Comment: "role id | 角色ID", Default: 2},
		{Name: "mobile", Type: field.TypeString, Unique: true, Comment: "mobile number | 手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username_email",
				Unique:  true,
				Columns: []*schema.Column{SysUsersColumns[4], SysUsersColumns[12]},
			},
		},
	}
	// VenueColumns holds the columns for the "venue" table.
	VenueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "地址 省/市/区"},
		{Name: "address_detail", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "latitude", Type: field.TypeString, Nullable: true, Comment: "维度"},
		{Name: "longitude", Type: field.TypeString, Nullable: true, Comment: "经度"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "联系电话"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "场馆照片"},
		{Name: "information", Type: field.TypeString, Nullable: true, Comment: "详情"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
	}
	// VenueTable holds the schema information for the "venue" table.
	VenueTable = &schema.Table{
		Name:       "venue",
		Columns:    VenueColumns,
		PrimaryKey: []*schema.Column{VenueColumns[0]},
	}
	// VenuePlaceColumns holds the columns for the "venue_place" table.
	VenuePlaceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "照片"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态", Default: 0},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// VenuePlaceTable holds the schema information for the "venue_place" table.
	VenuePlaceTable = &schema.Table{
		Name:       "venue_place",
		Columns:    VenuePlaceColumns,
		PrimaryKey: []*schema.Column{VenuePlaceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "venue_place_venue_places",
				Columns:    []*schema.Column{VenuePlaceColumns[6]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductPropertysColumns holds the columns for the "product_propertys" table.
	ProductPropertysColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "product_property_id", Type: field.TypeInt64},
	}
	// ProductPropertysTable holds the schema information for the "product_propertys" table.
	ProductPropertysTable = &schema.Table{
		Name:       "product_propertys",
		Columns:    ProductPropertysColumns,
		PrimaryKey: []*schema.Column{ProductPropertysColumns[0], ProductPropertysColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_propertys_product_id",
				Columns:    []*schema.Column{ProductPropertysColumns[0]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_propertys_product_property_id",
				Columns:    []*schema.Column{ProductPropertysColumns[1]},
				RefColumns: []*schema.Column{ProductPropertyColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "menu_id", Type: field.TypeInt64},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0], RoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_role_id",
				Columns:    []*schema.Column{RoleMenusColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_menus_menu_id",
				Columns:    []*schema.Column{RoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysApisTable,
		CourseRecordCoachTable,
		CourseRecordMemberTable,
		CourseRecordScheduleTable,
		SysDictionariesTable,
		SysDictionaryDetailsTable,
		SysLogsTable,
		MemberTable,
		MemberProductTable,
		MemberProductPropertyTable,
		MemberProductPropertyVenueTable,
		SysMenusTable,
		SysMenuParamsTable,
		OrderTable,
		OrderAmountTable,
		OrderItemTable,
		OrderPayTable,
		OrderSalesTable,
		ProductTable,
		ProductPropertyTable,
		ProductPropertyVenueTable,
		SysRolesTable,
		SysTokensTable,
		SysUsersTable,
		VenueTable,
		VenuePlaceTable,
		ProductPropertysTable,
		RoleMenusTable,
	}
)

func init() {
	SysApisTable.Annotation = &entsql.Annotation{
		Table: "sys_apis",
	}
	CourseRecordCoachTable.ForeignKeys[0].RefTable = CourseRecordScheduleTable
	CourseRecordCoachTable.Annotation = &entsql.Annotation{
		Table: "course_record_coach",
	}
	CourseRecordMemberTable.ForeignKeys[0].RefTable = CourseRecordScheduleTable
	CourseRecordMemberTable.Annotation = &entsql.Annotation{
		Table: "course_record_member",
	}
	CourseRecordScheduleTable.Annotation = &entsql.Annotation{
		Table: "course_record_schedule",
	}
	SysDictionariesTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionaries",
	}
	SysDictionaryDetailsTable.ForeignKeys[0].RefTable = SysDictionariesTable
	SysDictionaryDetailsTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionary_details",
	}
	SysLogsTable.Annotation = &entsql.Annotation{
		Table: "sys_logs",
	}
	MemberTable.Annotation = &entsql.Annotation{
		Table: "member",
	}
	MemberProductTable.ForeignKeys[0].RefTable = MemberTable
	MemberProductTable.Annotation = &entsql.Annotation{
		Table: "member_product",
	}
	MemberProductPropertyTable.ForeignKeys[0].RefTable = MemberProductTable
	MemberProductPropertyTable.Annotation = &entsql.Annotation{
		Table: "member_product_property",
	}
	MemberProductPropertyVenueTable.ForeignKeys[0].RefTable = MemberProductPropertyTable
	MemberProductPropertyVenueTable.Annotation = &entsql.Annotation{
		Table: "member_product_property_venue",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	SysMenuParamsTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenuParamsTable.Annotation = &entsql.Annotation{
		Table: "sys_menu_params",
	}
	OrderTable.Annotation = &entsql.Annotation{
		Table: "order",
	}
	OrderAmountTable.ForeignKeys[0].RefTable = OrderTable
	OrderAmountTable.Annotation = &entsql.Annotation{
		Table: "order_amount",
	}
	OrderItemTable.ForeignKeys[0].RefTable = OrderTable
	OrderItemTable.Annotation = &entsql.Annotation{
		Table: "order_item",
	}
	OrderPayTable.ForeignKeys[0].RefTable = OrderTable
	OrderPayTable.Annotation = &entsql.Annotation{
		Table: "order_pay",
	}
	OrderSalesTable.ForeignKeys[0].RefTable = OrderTable
	OrderSalesTable.Annotation = &entsql.Annotation{
		Table: "order_sales",
	}
	ProductTable.Annotation = &entsql.Annotation{
		Table: "product",
	}
	ProductPropertyTable.Annotation = &entsql.Annotation{
		Table: "product_property",
	}
	ProductPropertyVenueTable.Annotation = &entsql.Annotation{
		Table: "product_property_venue",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SysTokensTable.ForeignKeys[0].RefTable = SysUsersTable
	SysTokensTable.Annotation = &entsql.Annotation{
		Table: "sys_tokens",
	}
	SysUsersTable.Annotation = &entsql.Annotation{
		Table: "sys_users",
	}
	VenueTable.Annotation = &entsql.Annotation{
		Table: "venue",
	}
	VenuePlaceTable.ForeignKeys[0].RefTable = VenueTable
	VenuePlaceTable.Annotation = &entsql.Annotation{
		Table: "venue_place",
	}
	ProductPropertysTable.ForeignKeys[0].RefTable = ProductTable
	ProductPropertysTable.ForeignKeys[1].RefTable = ProductPropertyTable
	RoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
}
