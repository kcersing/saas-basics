// Code generated by ent, DO NOT EDIT.

package productpropertyvenue

import (
	"saas/pkg/db/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldUpdatedAt, v))
}

// VenueID applies equality check predicate on the "venue_id" field. It's identical to VenueIDEQ.
func VenueID(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldVenueID, v))
}

// ProductPropertyID applies equality check predicate on the "product_property_id" field. It's identical to ProductPropertyIDEQ.
func ProductPropertyID(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldProductPropertyID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLTE(FieldUpdatedAt, v))
}

// VenueIDEQ applies the EQ predicate on the "venue_id" field.
func VenueIDEQ(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldVenueID, v))
}

// VenueIDNEQ applies the NEQ predicate on the "venue_id" field.
func VenueIDNEQ(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNEQ(FieldVenueID, v))
}

// VenueIDIn applies the In predicate on the "venue_id" field.
func VenueIDIn(vs ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIn(FieldVenueID, vs...))
}

// VenueIDNotIn applies the NotIn predicate on the "venue_id" field.
func VenueIDNotIn(vs ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotIn(FieldVenueID, vs...))
}

// VenueIDGT applies the GT predicate on the "venue_id" field.
func VenueIDGT(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGT(FieldVenueID, v))
}

// VenueIDGTE applies the GTE predicate on the "venue_id" field.
func VenueIDGTE(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGTE(FieldVenueID, v))
}

// VenueIDLT applies the LT predicate on the "venue_id" field.
func VenueIDLT(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLT(FieldVenueID, v))
}

// VenueIDLTE applies the LTE predicate on the "venue_id" field.
func VenueIDLTE(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLTE(FieldVenueID, v))
}

// VenueIDIsNil applies the IsNil predicate on the "venue_id" field.
func VenueIDIsNil() predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIsNull(FieldVenueID))
}

// VenueIDNotNil applies the NotNil predicate on the "venue_id" field.
func VenueIDNotNil() predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotNull(FieldVenueID))
}

// ProductPropertyIDEQ applies the EQ predicate on the "product_property_id" field.
func ProductPropertyIDEQ(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldEQ(FieldProductPropertyID, v))
}

// ProductPropertyIDNEQ applies the NEQ predicate on the "product_property_id" field.
func ProductPropertyIDNEQ(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNEQ(FieldProductPropertyID, v))
}

// ProductPropertyIDIn applies the In predicate on the "product_property_id" field.
func ProductPropertyIDIn(vs ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIn(FieldProductPropertyID, vs...))
}

// ProductPropertyIDNotIn applies the NotIn predicate on the "product_property_id" field.
func ProductPropertyIDNotIn(vs ...int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotIn(FieldProductPropertyID, vs...))
}

// ProductPropertyIDGT applies the GT predicate on the "product_property_id" field.
func ProductPropertyIDGT(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGT(FieldProductPropertyID, v))
}

// ProductPropertyIDGTE applies the GTE predicate on the "product_property_id" field.
func ProductPropertyIDGTE(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldGTE(FieldProductPropertyID, v))
}

// ProductPropertyIDLT applies the LT predicate on the "product_property_id" field.
func ProductPropertyIDLT(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLT(FieldProductPropertyID, v))
}

// ProductPropertyIDLTE applies the LTE predicate on the "product_property_id" field.
func ProductPropertyIDLTE(v int64) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldLTE(FieldProductPropertyID, v))
}

// ProductPropertyIDIsNil applies the IsNil predicate on the "product_property_id" field.
func ProductPropertyIDIsNil() predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldIsNull(FieldProductPropertyID))
}

// ProductPropertyIDNotNil applies the NotNil predicate on the "product_property_id" field.
func ProductPropertyIDNotNil() predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.FieldNotNull(FieldProductPropertyID))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProductPropertyVenue) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProductPropertyVenue) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProductPropertyVenue) predicate.ProductPropertyVenue {
	return predicate.ProductPropertyVenue(sql.NotPredicates(p))
}
