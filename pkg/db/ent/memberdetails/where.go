// Code generated by ent, DO NOT EDIT.

package memberdetails

import (
	"saas/pkg/db/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldUpdatedAt, v))
}

// MemberID applies equality check predicate on the "member_id" field. It's identical to MemberIDEQ.
func MemberID(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldMemberID, v))
}

// Nickname applies equality check predicate on the "nickname" field. It's identical to NicknameEQ.
func Nickname(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldNickname, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldGender, v))
}

// Birthday applies equality check predicate on the "birthday" field. It's identical to BirthdayEQ.
func Birthday(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldBirthday, v))
}

// IdentityCard applies equality check predicate on the "identity_card" field. It's identical to IdentityCardEQ.
func IdentityCard(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldIdentityCard, v))
}

// FaceIdentityCard applies equality check predicate on the "face_identity_card" field. It's identical to FaceIdentityCardEQ.
func FaceIdentityCard(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFaceIdentityCard, v))
}

// BackIdentityCard applies equality check predicate on the "back_identity_card" field. It's identical to BackIdentityCardEQ.
func BackIdentityCard(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldBackIdentityCard, v))
}

// FacePic applies equality check predicate on the "face_pic" field. It's identical to FacePicEQ.
func FacePic(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFacePic, v))
}

// FaceEigenvalue applies equality check predicate on the "face_eigenvalue" field. It's identical to FaceEigenvalueEQ.
func FaceEigenvalue(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFaceEigenvalue, v))
}

// FacePicUpdatedTime applies equality check predicate on the "face_pic_updated_time" field. It's identical to FacePicUpdatedTimeEQ.
func FacePicUpdatedTime(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFacePicUpdatedTime, v))
}

// MoneySum applies equality check predicate on the "money_sum" field. It's identical to MoneySumEQ.
func MoneySum(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldMoneySum, v))
}

// ProductID applies equality check predicate on the "product_id" field. It's identical to ProductIDEQ.
func ProductID(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldProductID, v))
}

// ProductVenue applies equality check predicate on the "product_venue" field. It's identical to ProductVenueEQ.
func ProductVenue(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldProductVenue, v))
}

// EntrySum applies equality check predicate on the "entry_sum" field. It's identical to EntrySumEQ.
func EntrySum(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntrySum, v))
}

// EntryLastTime applies equality check predicate on the "entry_last_time" field. It's identical to EntryLastTimeEQ.
func EntryLastTime(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntryLastTime, v))
}

// EntryDeadlineTime applies equality check predicate on the "entry_deadline_time" field. It's identical to EntryDeadlineTimeEQ.
func EntryDeadlineTime(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntryDeadlineTime, v))
}

// ClassLastTime applies equality check predicate on the "class_last_time" field. It's identical to ClassLastTimeEQ.
func ClassLastTime(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldClassLastTime, v))
}

// RelationUID applies equality check predicate on the "relation_uid" field. It's identical to RelationUIDEQ.
func RelationUID(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldRelationUID, v))
}

// RelationMid applies equality check predicate on the "relation_mid" field. It's identical to RelationMidEQ.
func RelationMid(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldRelationMid, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldUpdatedAt, v))
}

// MemberIDEQ applies the EQ predicate on the "member_id" field.
func MemberIDEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldMemberID, v))
}

// MemberIDNEQ applies the NEQ predicate on the "member_id" field.
func MemberIDNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldMemberID, v))
}

// MemberIDIn applies the In predicate on the "member_id" field.
func MemberIDIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldMemberID, vs...))
}

// MemberIDNotIn applies the NotIn predicate on the "member_id" field.
func MemberIDNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldMemberID, vs...))
}

// MemberIDIsNil applies the IsNil predicate on the "member_id" field.
func MemberIDIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldMemberID))
}

// MemberIDNotNil applies the NotNil predicate on the "member_id" field.
func MemberIDNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldMemberID))
}

// NicknameEQ applies the EQ predicate on the "nickname" field.
func NicknameEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldNickname, v))
}

// NicknameNEQ applies the NEQ predicate on the "nickname" field.
func NicknameNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldNickname, v))
}

// NicknameIn applies the In predicate on the "nickname" field.
func NicknameIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldNickname, vs...))
}

// NicknameNotIn applies the NotIn predicate on the "nickname" field.
func NicknameNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldNickname, vs...))
}

// NicknameGT applies the GT predicate on the "nickname" field.
func NicknameGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldNickname, v))
}

// NicknameGTE applies the GTE predicate on the "nickname" field.
func NicknameGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldNickname, v))
}

// NicknameLT applies the LT predicate on the "nickname" field.
func NicknameLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldNickname, v))
}

// NicknameLTE applies the LTE predicate on the "nickname" field.
func NicknameLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldNickname, v))
}

// NicknameContains applies the Contains predicate on the "nickname" field.
func NicknameContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldNickname, v))
}

// NicknameHasPrefix applies the HasPrefix predicate on the "nickname" field.
func NicknameHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldNickname, v))
}

// NicknameHasSuffix applies the HasSuffix predicate on the "nickname" field.
func NicknameHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldNickname, v))
}

// NicknameIsNil applies the IsNil predicate on the "nickname" field.
func NicknameIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldNickname))
}

// NicknameNotNil applies the NotNil predicate on the "nickname" field.
func NicknameNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldNickname))
}

// NicknameEqualFold applies the EqualFold predicate on the "nickname" field.
func NicknameEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldNickname, v))
}

// NicknameContainsFold applies the ContainsFold predicate on the "nickname" field.
func NicknameContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldNickname, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldGender, v))
}

// GenderIsNil applies the IsNil predicate on the "gender" field.
func GenderIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldGender))
}

// GenderNotNil applies the NotNil predicate on the "gender" field.
func GenderNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldGender))
}

// BirthdayEQ applies the EQ predicate on the "birthday" field.
func BirthdayEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldBirthday, v))
}

// BirthdayNEQ applies the NEQ predicate on the "birthday" field.
func BirthdayNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldBirthday, v))
}

// BirthdayIn applies the In predicate on the "birthday" field.
func BirthdayIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldBirthday, vs...))
}

// BirthdayNotIn applies the NotIn predicate on the "birthday" field.
func BirthdayNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldBirthday, vs...))
}

// BirthdayGT applies the GT predicate on the "birthday" field.
func BirthdayGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldBirthday, v))
}

// BirthdayGTE applies the GTE predicate on the "birthday" field.
func BirthdayGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldBirthday, v))
}

// BirthdayLT applies the LT predicate on the "birthday" field.
func BirthdayLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldBirthday, v))
}

// BirthdayLTE applies the LTE predicate on the "birthday" field.
func BirthdayLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldBirthday, v))
}

// BirthdayIsNil applies the IsNil predicate on the "birthday" field.
func BirthdayIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldBirthday))
}

// BirthdayNotNil applies the NotNil predicate on the "birthday" field.
func BirthdayNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldBirthday))
}

// IdentityCardEQ applies the EQ predicate on the "identity_card" field.
func IdentityCardEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldIdentityCard, v))
}

// IdentityCardNEQ applies the NEQ predicate on the "identity_card" field.
func IdentityCardNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldIdentityCard, v))
}

// IdentityCardIn applies the In predicate on the "identity_card" field.
func IdentityCardIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldIdentityCard, vs...))
}

// IdentityCardNotIn applies the NotIn predicate on the "identity_card" field.
func IdentityCardNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldIdentityCard, vs...))
}

// IdentityCardGT applies the GT predicate on the "identity_card" field.
func IdentityCardGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldIdentityCard, v))
}

// IdentityCardGTE applies the GTE predicate on the "identity_card" field.
func IdentityCardGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldIdentityCard, v))
}

// IdentityCardLT applies the LT predicate on the "identity_card" field.
func IdentityCardLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldIdentityCard, v))
}

// IdentityCardLTE applies the LTE predicate on the "identity_card" field.
func IdentityCardLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldIdentityCard, v))
}

// IdentityCardContains applies the Contains predicate on the "identity_card" field.
func IdentityCardContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldIdentityCard, v))
}

// IdentityCardHasPrefix applies the HasPrefix predicate on the "identity_card" field.
func IdentityCardHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldIdentityCard, v))
}

// IdentityCardHasSuffix applies the HasSuffix predicate on the "identity_card" field.
func IdentityCardHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldIdentityCard, v))
}

// IdentityCardIsNil applies the IsNil predicate on the "identity_card" field.
func IdentityCardIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldIdentityCard))
}

// IdentityCardNotNil applies the NotNil predicate on the "identity_card" field.
func IdentityCardNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldIdentityCard))
}

// IdentityCardEqualFold applies the EqualFold predicate on the "identity_card" field.
func IdentityCardEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldIdentityCard, v))
}

// IdentityCardContainsFold applies the ContainsFold predicate on the "identity_card" field.
func IdentityCardContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldIdentityCard, v))
}

// FaceIdentityCardEQ applies the EQ predicate on the "face_identity_card" field.
func FaceIdentityCardEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFaceIdentityCard, v))
}

// FaceIdentityCardNEQ applies the NEQ predicate on the "face_identity_card" field.
func FaceIdentityCardNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldFaceIdentityCard, v))
}

// FaceIdentityCardIn applies the In predicate on the "face_identity_card" field.
func FaceIdentityCardIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldFaceIdentityCard, vs...))
}

// FaceIdentityCardNotIn applies the NotIn predicate on the "face_identity_card" field.
func FaceIdentityCardNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldFaceIdentityCard, vs...))
}

// FaceIdentityCardGT applies the GT predicate on the "face_identity_card" field.
func FaceIdentityCardGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldFaceIdentityCard, v))
}

// FaceIdentityCardGTE applies the GTE predicate on the "face_identity_card" field.
func FaceIdentityCardGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldFaceIdentityCard, v))
}

// FaceIdentityCardLT applies the LT predicate on the "face_identity_card" field.
func FaceIdentityCardLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldFaceIdentityCard, v))
}

// FaceIdentityCardLTE applies the LTE predicate on the "face_identity_card" field.
func FaceIdentityCardLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldFaceIdentityCard, v))
}

// FaceIdentityCardContains applies the Contains predicate on the "face_identity_card" field.
func FaceIdentityCardContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldFaceIdentityCard, v))
}

// FaceIdentityCardHasPrefix applies the HasPrefix predicate on the "face_identity_card" field.
func FaceIdentityCardHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldFaceIdentityCard, v))
}

// FaceIdentityCardHasSuffix applies the HasSuffix predicate on the "face_identity_card" field.
func FaceIdentityCardHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldFaceIdentityCard, v))
}

// FaceIdentityCardIsNil applies the IsNil predicate on the "face_identity_card" field.
func FaceIdentityCardIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldFaceIdentityCard))
}

// FaceIdentityCardNotNil applies the NotNil predicate on the "face_identity_card" field.
func FaceIdentityCardNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldFaceIdentityCard))
}

// FaceIdentityCardEqualFold applies the EqualFold predicate on the "face_identity_card" field.
func FaceIdentityCardEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldFaceIdentityCard, v))
}

// FaceIdentityCardContainsFold applies the ContainsFold predicate on the "face_identity_card" field.
func FaceIdentityCardContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldFaceIdentityCard, v))
}

// BackIdentityCardEQ applies the EQ predicate on the "back_identity_card" field.
func BackIdentityCardEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldBackIdentityCard, v))
}

// BackIdentityCardNEQ applies the NEQ predicate on the "back_identity_card" field.
func BackIdentityCardNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldBackIdentityCard, v))
}

// BackIdentityCardIn applies the In predicate on the "back_identity_card" field.
func BackIdentityCardIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldBackIdentityCard, vs...))
}

// BackIdentityCardNotIn applies the NotIn predicate on the "back_identity_card" field.
func BackIdentityCardNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldBackIdentityCard, vs...))
}

// BackIdentityCardGT applies the GT predicate on the "back_identity_card" field.
func BackIdentityCardGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldBackIdentityCard, v))
}

// BackIdentityCardGTE applies the GTE predicate on the "back_identity_card" field.
func BackIdentityCardGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldBackIdentityCard, v))
}

// BackIdentityCardLT applies the LT predicate on the "back_identity_card" field.
func BackIdentityCardLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldBackIdentityCard, v))
}

// BackIdentityCardLTE applies the LTE predicate on the "back_identity_card" field.
func BackIdentityCardLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldBackIdentityCard, v))
}

// BackIdentityCardContains applies the Contains predicate on the "back_identity_card" field.
func BackIdentityCardContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldBackIdentityCard, v))
}

// BackIdentityCardHasPrefix applies the HasPrefix predicate on the "back_identity_card" field.
func BackIdentityCardHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldBackIdentityCard, v))
}

// BackIdentityCardHasSuffix applies the HasSuffix predicate on the "back_identity_card" field.
func BackIdentityCardHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldBackIdentityCard, v))
}

// BackIdentityCardIsNil applies the IsNil predicate on the "back_identity_card" field.
func BackIdentityCardIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldBackIdentityCard))
}

// BackIdentityCardNotNil applies the NotNil predicate on the "back_identity_card" field.
func BackIdentityCardNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldBackIdentityCard))
}

// BackIdentityCardEqualFold applies the EqualFold predicate on the "back_identity_card" field.
func BackIdentityCardEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldBackIdentityCard, v))
}

// BackIdentityCardContainsFold applies the ContainsFold predicate on the "back_identity_card" field.
func BackIdentityCardContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldBackIdentityCard, v))
}

// FacePicEQ applies the EQ predicate on the "face_pic" field.
func FacePicEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFacePic, v))
}

// FacePicNEQ applies the NEQ predicate on the "face_pic" field.
func FacePicNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldFacePic, v))
}

// FacePicIn applies the In predicate on the "face_pic" field.
func FacePicIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldFacePic, vs...))
}

// FacePicNotIn applies the NotIn predicate on the "face_pic" field.
func FacePicNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldFacePic, vs...))
}

// FacePicGT applies the GT predicate on the "face_pic" field.
func FacePicGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldFacePic, v))
}

// FacePicGTE applies the GTE predicate on the "face_pic" field.
func FacePicGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldFacePic, v))
}

// FacePicLT applies the LT predicate on the "face_pic" field.
func FacePicLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldFacePic, v))
}

// FacePicLTE applies the LTE predicate on the "face_pic" field.
func FacePicLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldFacePic, v))
}

// FacePicContains applies the Contains predicate on the "face_pic" field.
func FacePicContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldFacePic, v))
}

// FacePicHasPrefix applies the HasPrefix predicate on the "face_pic" field.
func FacePicHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldFacePic, v))
}

// FacePicHasSuffix applies the HasSuffix predicate on the "face_pic" field.
func FacePicHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldFacePic, v))
}

// FacePicIsNil applies the IsNil predicate on the "face_pic" field.
func FacePicIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldFacePic))
}

// FacePicNotNil applies the NotNil predicate on the "face_pic" field.
func FacePicNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldFacePic))
}

// FacePicEqualFold applies the EqualFold predicate on the "face_pic" field.
func FacePicEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldFacePic, v))
}

// FacePicContainsFold applies the ContainsFold predicate on the "face_pic" field.
func FacePicContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldFacePic, v))
}

// FaceEigenvalueEQ applies the EQ predicate on the "face_eigenvalue" field.
func FaceEigenvalueEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFaceEigenvalue, v))
}

// FaceEigenvalueNEQ applies the NEQ predicate on the "face_eigenvalue" field.
func FaceEigenvalueNEQ(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldFaceEigenvalue, v))
}

// FaceEigenvalueIn applies the In predicate on the "face_eigenvalue" field.
func FaceEigenvalueIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldFaceEigenvalue, vs...))
}

// FaceEigenvalueNotIn applies the NotIn predicate on the "face_eigenvalue" field.
func FaceEigenvalueNotIn(vs ...string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldFaceEigenvalue, vs...))
}

// FaceEigenvalueGT applies the GT predicate on the "face_eigenvalue" field.
func FaceEigenvalueGT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldFaceEigenvalue, v))
}

// FaceEigenvalueGTE applies the GTE predicate on the "face_eigenvalue" field.
func FaceEigenvalueGTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldFaceEigenvalue, v))
}

// FaceEigenvalueLT applies the LT predicate on the "face_eigenvalue" field.
func FaceEigenvalueLT(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldFaceEigenvalue, v))
}

// FaceEigenvalueLTE applies the LTE predicate on the "face_eigenvalue" field.
func FaceEigenvalueLTE(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldFaceEigenvalue, v))
}

// FaceEigenvalueContains applies the Contains predicate on the "face_eigenvalue" field.
func FaceEigenvalueContains(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContains(FieldFaceEigenvalue, v))
}

// FaceEigenvalueHasPrefix applies the HasPrefix predicate on the "face_eigenvalue" field.
func FaceEigenvalueHasPrefix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasPrefix(FieldFaceEigenvalue, v))
}

// FaceEigenvalueHasSuffix applies the HasSuffix predicate on the "face_eigenvalue" field.
func FaceEigenvalueHasSuffix(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldHasSuffix(FieldFaceEigenvalue, v))
}

// FaceEigenvalueIsNil applies the IsNil predicate on the "face_eigenvalue" field.
func FaceEigenvalueIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldFaceEigenvalue))
}

// FaceEigenvalueNotNil applies the NotNil predicate on the "face_eigenvalue" field.
func FaceEigenvalueNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldFaceEigenvalue))
}

// FaceEigenvalueEqualFold applies the EqualFold predicate on the "face_eigenvalue" field.
func FaceEigenvalueEqualFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEqualFold(FieldFaceEigenvalue, v))
}

// FaceEigenvalueContainsFold applies the ContainsFold predicate on the "face_eigenvalue" field.
func FaceEigenvalueContainsFold(v string) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldContainsFold(FieldFaceEigenvalue, v))
}

// FacePicUpdatedTimeEQ applies the EQ predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldFacePicUpdatedTime, v))
}

// FacePicUpdatedTimeNEQ applies the NEQ predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldFacePicUpdatedTime, v))
}

// FacePicUpdatedTimeIn applies the In predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldFacePicUpdatedTime, vs...))
}

// FacePicUpdatedTimeNotIn applies the NotIn predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldFacePicUpdatedTime, vs...))
}

// FacePicUpdatedTimeGT applies the GT predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldFacePicUpdatedTime, v))
}

// FacePicUpdatedTimeGTE applies the GTE predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldFacePicUpdatedTime, v))
}

// FacePicUpdatedTimeLT applies the LT predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldFacePicUpdatedTime, v))
}

// FacePicUpdatedTimeLTE applies the LTE predicate on the "face_pic_updated_time" field.
func FacePicUpdatedTimeLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldFacePicUpdatedTime, v))
}

// MoneySumEQ applies the EQ predicate on the "money_sum" field.
func MoneySumEQ(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldMoneySum, v))
}

// MoneySumNEQ applies the NEQ predicate on the "money_sum" field.
func MoneySumNEQ(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldMoneySum, v))
}

// MoneySumIn applies the In predicate on the "money_sum" field.
func MoneySumIn(vs ...float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldMoneySum, vs...))
}

// MoneySumNotIn applies the NotIn predicate on the "money_sum" field.
func MoneySumNotIn(vs ...float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldMoneySum, vs...))
}

// MoneySumGT applies the GT predicate on the "money_sum" field.
func MoneySumGT(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldMoneySum, v))
}

// MoneySumGTE applies the GTE predicate on the "money_sum" field.
func MoneySumGTE(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldMoneySum, v))
}

// MoneySumLT applies the LT predicate on the "money_sum" field.
func MoneySumLT(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldMoneySum, v))
}

// MoneySumLTE applies the LTE predicate on the "money_sum" field.
func MoneySumLTE(v float64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldMoneySum, v))
}

// MoneySumIsNil applies the IsNil predicate on the "money_sum" field.
func MoneySumIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldMoneySum))
}

// MoneySumNotNil applies the NotNil predicate on the "money_sum" field.
func MoneySumNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldMoneySum))
}

// ProductIDEQ applies the EQ predicate on the "product_id" field.
func ProductIDEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldProductID, v))
}

// ProductIDNEQ applies the NEQ predicate on the "product_id" field.
func ProductIDNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldProductID, v))
}

// ProductIDIn applies the In predicate on the "product_id" field.
func ProductIDIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldProductID, vs...))
}

// ProductIDNotIn applies the NotIn predicate on the "product_id" field.
func ProductIDNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldProductID, vs...))
}

// ProductIDGT applies the GT predicate on the "product_id" field.
func ProductIDGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldProductID, v))
}

// ProductIDGTE applies the GTE predicate on the "product_id" field.
func ProductIDGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldProductID, v))
}

// ProductIDLT applies the LT predicate on the "product_id" field.
func ProductIDLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldProductID, v))
}

// ProductIDLTE applies the LTE predicate on the "product_id" field.
func ProductIDLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldProductID, v))
}

// ProductIDIsNil applies the IsNil predicate on the "product_id" field.
func ProductIDIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldProductID))
}

// ProductIDNotNil applies the NotNil predicate on the "product_id" field.
func ProductIDNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldProductID))
}

// ProductVenueEQ applies the EQ predicate on the "product_venue" field.
func ProductVenueEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldProductVenue, v))
}

// ProductVenueNEQ applies the NEQ predicate on the "product_venue" field.
func ProductVenueNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldProductVenue, v))
}

// ProductVenueIn applies the In predicate on the "product_venue" field.
func ProductVenueIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldProductVenue, vs...))
}

// ProductVenueNotIn applies the NotIn predicate on the "product_venue" field.
func ProductVenueNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldProductVenue, vs...))
}

// ProductVenueGT applies the GT predicate on the "product_venue" field.
func ProductVenueGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldProductVenue, v))
}

// ProductVenueGTE applies the GTE predicate on the "product_venue" field.
func ProductVenueGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldProductVenue, v))
}

// ProductVenueLT applies the LT predicate on the "product_venue" field.
func ProductVenueLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldProductVenue, v))
}

// ProductVenueLTE applies the LTE predicate on the "product_venue" field.
func ProductVenueLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldProductVenue, v))
}

// ProductVenueIsNil applies the IsNil predicate on the "product_venue" field.
func ProductVenueIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldProductVenue))
}

// ProductVenueNotNil applies the NotNil predicate on the "product_venue" field.
func ProductVenueNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldProductVenue))
}

// EntrySumEQ applies the EQ predicate on the "entry_sum" field.
func EntrySumEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntrySum, v))
}

// EntrySumNEQ applies the NEQ predicate on the "entry_sum" field.
func EntrySumNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldEntrySum, v))
}

// EntrySumIn applies the In predicate on the "entry_sum" field.
func EntrySumIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldEntrySum, vs...))
}

// EntrySumNotIn applies the NotIn predicate on the "entry_sum" field.
func EntrySumNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldEntrySum, vs...))
}

// EntrySumGT applies the GT predicate on the "entry_sum" field.
func EntrySumGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldEntrySum, v))
}

// EntrySumGTE applies the GTE predicate on the "entry_sum" field.
func EntrySumGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldEntrySum, v))
}

// EntrySumLT applies the LT predicate on the "entry_sum" field.
func EntrySumLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldEntrySum, v))
}

// EntrySumLTE applies the LTE predicate on the "entry_sum" field.
func EntrySumLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldEntrySum, v))
}

// EntrySumIsNil applies the IsNil predicate on the "entry_sum" field.
func EntrySumIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldEntrySum))
}

// EntrySumNotNil applies the NotNil predicate on the "entry_sum" field.
func EntrySumNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldEntrySum))
}

// EntryLastTimeEQ applies the EQ predicate on the "entry_last_time" field.
func EntryLastTimeEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntryLastTime, v))
}

// EntryLastTimeNEQ applies the NEQ predicate on the "entry_last_time" field.
func EntryLastTimeNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldEntryLastTime, v))
}

// EntryLastTimeIn applies the In predicate on the "entry_last_time" field.
func EntryLastTimeIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldEntryLastTime, vs...))
}

// EntryLastTimeNotIn applies the NotIn predicate on the "entry_last_time" field.
func EntryLastTimeNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldEntryLastTime, vs...))
}

// EntryLastTimeGT applies the GT predicate on the "entry_last_time" field.
func EntryLastTimeGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldEntryLastTime, v))
}

// EntryLastTimeGTE applies the GTE predicate on the "entry_last_time" field.
func EntryLastTimeGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldEntryLastTime, v))
}

// EntryLastTimeLT applies the LT predicate on the "entry_last_time" field.
func EntryLastTimeLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldEntryLastTime, v))
}

// EntryLastTimeLTE applies the LTE predicate on the "entry_last_time" field.
func EntryLastTimeLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldEntryLastTime, v))
}

// EntryLastTimeIsNil applies the IsNil predicate on the "entry_last_time" field.
func EntryLastTimeIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldEntryLastTime))
}

// EntryLastTimeNotNil applies the NotNil predicate on the "entry_last_time" field.
func EntryLastTimeNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldEntryLastTime))
}

// EntryDeadlineTimeEQ applies the EQ predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeNEQ applies the NEQ predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeIn applies the In predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldEntryDeadlineTime, vs...))
}

// EntryDeadlineTimeNotIn applies the NotIn predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldEntryDeadlineTime, vs...))
}

// EntryDeadlineTimeGT applies the GT predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeGTE applies the GTE predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeLT applies the LT predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeLTE applies the LTE predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldEntryDeadlineTime, v))
}

// EntryDeadlineTimeIsNil applies the IsNil predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldEntryDeadlineTime))
}

// EntryDeadlineTimeNotNil applies the NotNil predicate on the "entry_deadline_time" field.
func EntryDeadlineTimeNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldEntryDeadlineTime))
}

// ClassLastTimeEQ applies the EQ predicate on the "class_last_time" field.
func ClassLastTimeEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldClassLastTime, v))
}

// ClassLastTimeNEQ applies the NEQ predicate on the "class_last_time" field.
func ClassLastTimeNEQ(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldClassLastTime, v))
}

// ClassLastTimeIn applies the In predicate on the "class_last_time" field.
func ClassLastTimeIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldClassLastTime, vs...))
}

// ClassLastTimeNotIn applies the NotIn predicate on the "class_last_time" field.
func ClassLastTimeNotIn(vs ...time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldClassLastTime, vs...))
}

// ClassLastTimeGT applies the GT predicate on the "class_last_time" field.
func ClassLastTimeGT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldClassLastTime, v))
}

// ClassLastTimeGTE applies the GTE predicate on the "class_last_time" field.
func ClassLastTimeGTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldClassLastTime, v))
}

// ClassLastTimeLT applies the LT predicate on the "class_last_time" field.
func ClassLastTimeLT(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldClassLastTime, v))
}

// ClassLastTimeLTE applies the LTE predicate on the "class_last_time" field.
func ClassLastTimeLTE(v time.Time) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldClassLastTime, v))
}

// ClassLastTimeIsNil applies the IsNil predicate on the "class_last_time" field.
func ClassLastTimeIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldClassLastTime))
}

// ClassLastTimeNotNil applies the NotNil predicate on the "class_last_time" field.
func ClassLastTimeNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldClassLastTime))
}

// RelationUIDEQ applies the EQ predicate on the "relation_uid" field.
func RelationUIDEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldRelationUID, v))
}

// RelationUIDNEQ applies the NEQ predicate on the "relation_uid" field.
func RelationUIDNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldRelationUID, v))
}

// RelationUIDIn applies the In predicate on the "relation_uid" field.
func RelationUIDIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldRelationUID, vs...))
}

// RelationUIDNotIn applies the NotIn predicate on the "relation_uid" field.
func RelationUIDNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldRelationUID, vs...))
}

// RelationUIDGT applies the GT predicate on the "relation_uid" field.
func RelationUIDGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldRelationUID, v))
}

// RelationUIDGTE applies the GTE predicate on the "relation_uid" field.
func RelationUIDGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldRelationUID, v))
}

// RelationUIDLT applies the LT predicate on the "relation_uid" field.
func RelationUIDLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldRelationUID, v))
}

// RelationUIDLTE applies the LTE predicate on the "relation_uid" field.
func RelationUIDLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldRelationUID, v))
}

// RelationUIDIsNil applies the IsNil predicate on the "relation_uid" field.
func RelationUIDIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldRelationUID))
}

// RelationUIDNotNil applies the NotNil predicate on the "relation_uid" field.
func RelationUIDNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldRelationUID))
}

// RelationMidEQ applies the EQ predicate on the "relation_mid" field.
func RelationMidEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldEQ(FieldRelationMid, v))
}

// RelationMidNEQ applies the NEQ predicate on the "relation_mid" field.
func RelationMidNEQ(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNEQ(FieldRelationMid, v))
}

// RelationMidIn applies the In predicate on the "relation_mid" field.
func RelationMidIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIn(FieldRelationMid, vs...))
}

// RelationMidNotIn applies the NotIn predicate on the "relation_mid" field.
func RelationMidNotIn(vs ...int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotIn(FieldRelationMid, vs...))
}

// RelationMidGT applies the GT predicate on the "relation_mid" field.
func RelationMidGT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGT(FieldRelationMid, v))
}

// RelationMidGTE applies the GTE predicate on the "relation_mid" field.
func RelationMidGTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldGTE(FieldRelationMid, v))
}

// RelationMidLT applies the LT predicate on the "relation_mid" field.
func RelationMidLT(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLT(FieldRelationMid, v))
}

// RelationMidLTE applies the LTE predicate on the "relation_mid" field.
func RelationMidLTE(v int64) predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldLTE(FieldRelationMid, v))
}

// RelationMidIsNil applies the IsNil predicate on the "relation_mid" field.
func RelationMidIsNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldIsNull(FieldRelationMid))
}

// RelationMidNotNil applies the NotNil predicate on the "relation_mid" field.
func RelationMidNotNil() predicate.MemberDetails {
	return predicate.MemberDetails(sql.FieldNotNull(FieldRelationMid))
}

// HasInfo applies the HasEdge predicate on the "info" edge.
func HasInfo() predicate.MemberDetails {
	return predicate.MemberDetails(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, InfoTable, InfoColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasInfoWith applies the HasEdge predicate on the "info" edge with a given conditions (other predicates).
func HasInfoWith(preds ...predicate.Member) predicate.MemberDetails {
	return predicate.MemberDetails(func(s *sql.Selector) {
		step := newInfoStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MemberDetails) predicate.MemberDetails {
	return predicate.MemberDetails(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MemberDetails) predicate.MemberDetails {
	return predicate.MemberDetails(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MemberDetails) predicate.MemberDetails {
	return predicate.MemberDetails(sql.NotPredicates(p))
}
