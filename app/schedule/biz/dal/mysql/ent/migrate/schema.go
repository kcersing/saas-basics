// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SScheduleColumns holds the columns for the "s_schedule" table.
	SScheduleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "property_id", Type: field.TypeInt64, Nullable: true, Comment: "课程"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "时长"},
		{Name: "place_id", Type: field.TypeInt64, Nullable: true, Comment: "场地ID"},
		{Name: "num", Type: field.TypeInt64, Nullable: true, Comment: "上课人数"},
		{Name: "num_surplus", Type: field.TypeInt64, Nullable: true, Comment: "剩余可约人数"},
		{Name: "date", Type: field.TypeString, Nullable: true, Comment: "日期"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "课程价格", Default: 0},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "venue_name", Type: field.TypeString, Nullable: true, Comment: "场馆名称"},
		{Name: "place_name", Type: field.TypeString, Nullable: true, Comment: "场地名称"},
	}
	// SScheduleTable holds the schema information for the "s_schedule" table.
	SScheduleTable = &schema.Table{
		Name:       "s_schedule",
		Columns:    SScheduleColumns,
		PrimaryKey: []*schema.Column{SScheduleColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "schedule_venue_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleColumns[6]},
			},
			{
				Name:    "schedule_property_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleColumns[7]},
			},
			{
				Name:    "schedule_start_time",
				Unique:  false,
				Columns: []*schema.Column{SScheduleColumns[13]},
			},
			{
				Name:    "schedule_end_time",
				Unique:  false,
				Columns: []*schema.Column{SScheduleColumns[14]},
			},
		},
	}
	// SScheduleCoachColumns holds the columns for the "s_schedule_coach" table.
	SScheduleCoachColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "coach_id", Type: field.TypeInt64, Nullable: true, Comment: "教练ID"},
		{Name: "schedule_name", Type: field.TypeString, Nullable: true, Comment: "课程名称"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "coach_name", Type: field.TypeString, Nullable: true, Comment: "教练名称"},
		{Name: "schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// SScheduleCoachTable holds the schema information for the "s_schedule_coach" table.
	SScheduleCoachTable = &schema.Table{
		Name:       "s_schedule_coach",
		Columns:    SScheduleCoachColumns,
		PrimaryKey: []*schema.Column{SScheduleCoachColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "s_schedule_coach_s_schedule_coachs",
				Columns:    []*schema.Column{SScheduleCoachColumns[13]},
				RefColumns: []*schema.Column{SScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "schedulecoach_venue_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleCoachColumns[4]},
			},
			{
				Name:    "schedulecoach_coach_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleCoachColumns[5]},
			},
			{
				Name:    "schedulecoach_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleCoachColumns[13]},
			},
		},
	}
	// SScheduleMemberColumns holds the columns for the "s_schedule_member" table.
	SScheduleMemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "schedule_name", Type: field.TypeString, Nullable: true, Comment: "课程名称"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员购买课ID"},
		{Name: "member_product_property_id", Type: field.TypeInt64, Nullable: true, Comment: "会员购买课ID"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "member_name", Type: field.TypeString, Nullable: true, Comment: "会员名称"},
		{Name: "member_product_name", Type: field.TypeString, Nullable: true, Comment: "会员产品名称"},
		{Name: "member_product_property_name", Type: field.TypeString, Nullable: true, Comment: "会员产品属性名称"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// SScheduleMemberTable holds the schema information for the "s_schedule_member" table.
	SScheduleMemberTable = &schema.Table{
		Name:       "s_schedule_member",
		Columns:    SScheduleMemberColumns,
		PrimaryKey: []*schema.Column{SScheduleMemberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "s_schedule_member_s_schedule_members",
				Columns:    []*schema.Column{SScheduleMemberColumns[18]},
				RefColumns: []*schema.Column{SScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "schedulemember_venue_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleMemberColumns[4]},
			},
			{
				Name:    "schedulemember_member_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleMemberColumns[6]},
			},
			{
				Name:    "schedulemember_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{SScheduleMemberColumns[18]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SScheduleTable,
		SScheduleCoachTable,
		SScheduleMemberTable,
	}
)

func init() {
	SScheduleTable.Annotation = &entsql.Annotation{
		Table:   "s_schedule",
		Options: "AUTO_INCREMENT = 100000",
	}
	SScheduleCoachTable.ForeignKeys[0].RefTable = SScheduleTable
	SScheduleCoachTable.Annotation = &entsql.Annotation{
		Table:   "s_schedule_coach",
		Options: "AUTO_INCREMENT = 100000",
	}
	SScheduleMemberTable.ForeignKeys[0].RefTable = SScheduleTable
	SScheduleMemberTable.Annotation = &entsql.Annotation{
		Table:   "s_schedule_member",
		Options: "AUTO_INCREMENT = 100000",
	}
}
