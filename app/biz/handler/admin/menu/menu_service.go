// Code generated by hertz generator.

package menu

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	menu "saas/app/biz/model/admin/menu"
	base "saas/app/biz/model/base"
)

// CreateMenu .
// @router /api/admin/menu/create [POST]
func CreateMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.CreateOrUpdateMenuReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMenu .
// @router /api/admin/menu/update [POST]
func UpdateMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.CreateOrUpdateMenuReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteMenu .
// @router /api/admin/menu [POST]
func DeleteMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// MenuByRole .
// @router /api/admin/menu/role [GET]
func MenuByRole(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.Empty
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// MenuList .
// @router /api/admin/menu/list [GET]
func MenuList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.PageInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// CreateMenuParam .
// @router /api/admin/menu/param/create [POST]
func CreateMenuParam(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.CreateOrUpdateMenuParamReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMenuParam .
// @router /api/admin/menu/param/update [POST]
func UpdateMenuParam(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.CreateOrUpdateMenuParamReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteMenuParam .
// @router /api/admin/menu/param [POST]
func DeleteMenuParam(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// MenuParamListByMenuID .
// @router /api/admin/menu/param/list [POST]
func MenuParamListByMenuID(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
