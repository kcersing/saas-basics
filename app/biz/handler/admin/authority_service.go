// Code generated by hertz generator.

package admin

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	admin "saas/app/biz/model/admin"
	base "saas/app/biz/model/base"
)

// CreateAuthority .
// @router /api/admin/authority/api/create [POST]
func CreateAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.CreateOrUpdateApiAuthorityReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateApiAuthority .
// @router /api/admin/authority/api/update [POST]
func UpdateApiAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.CreateOrUpdateApiAuthorityReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// ApiAuthority .
// @router /api/admin/authority/api/role [POST]
func ApiAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// CreateMenuAuthority .
// @router /api/admin/authority/menu/create [POST]
func CreateMenuAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.MenuAuthorityInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMenuAuthority .
// @router /api/admin/authority/menu/update [POST]
func UpdateMenuAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.MenuAuthorityInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// MenuAuthority .
// @router /api/admin/authority/menu/role [POST]
func MenuAuthority(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
