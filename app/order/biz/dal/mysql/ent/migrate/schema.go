// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员产品id"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态 | [0:正常;1:禁用]", Default: 0},
		{Name: "source", Type: field.TypeString, Nullable: true, Comment: "订单来源", Default: ""},
		{Name: "device", Type: field.TypeString, Nullable: true, Comment: "设备来源", Default: ""},
		{Name: "nature", Type: field.TypeInt64, Nullable: true, Comment: "业务类型"},
		{Name: "completion_at", Type: field.TypeTime, Nullable: true, Comment: "订单完成时间"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "创建人id"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "order_order_sn",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[3]},
			},
			{
				Name:    "order_venue_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[4]},
			},
			{
				Name:    "order_member_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[5]},
			},
			{
				Name:    "order_completion_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[11]},
			},
			{
				Name:    "order_member_product_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[6]},
			},
		},
	}
	// OrderAmountColumns holds the columns for the "order_amount" table.
	OrderAmountColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "total", Type: field.TypeFloat64, Nullable: true, Comment: "总金额"},
		{Name: "actual", Type: field.TypeFloat64, Nullable: true, Comment: "实际已付款"},
		{Name: "residue", Type: field.TypeFloat64, Nullable: true, Comment: "未支付金额"},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderAmountTable holds the schema information for the "order_amount" table.
	OrderAmountTable = &schema.Table{
		Name:       "order_amount",
		Columns:    OrderAmountColumns,
		PrimaryKey: []*schema.Column{OrderAmountColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_amount_order_amount",
				Columns:    []*schema.Column{OrderAmountColumns[7]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderamount_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderAmountColumns[7]},
			},
		},
	}
	// OrderItemColumns holds the columns for the "order_item" table.
	OrderItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品id"},
		{Name: "related_user_product_id", Type: field.TypeInt64, Nullable: true, Comment: "关联会员产品id", Default: 0},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderItemTable holds the schema information for the "order_item" table.
	OrderItemTable = &schema.Table{
		Name:       "order_item",
		Columns:    OrderItemColumns,
		PrimaryKey: []*schema.Column{OrderItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_order_item",
				Columns:    []*schema.Column{OrderItemColumns[5]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderitem_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderItemColumns[5]},
			},
			{
				Name:    "orderitem_product_id",
				Unique:  false,
				Columns: []*schema.Column{OrderItemColumns[3]},
			},
		},
	}
	// OrderPayColumns holds the columns for the "order_pay" table.
	OrderPayColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "pay", Type: field.TypeFloat64, Nullable: true, Comment: "实际付款"},
		{Name: "note", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "pay_way", Type: field.TypeString, Nullable: true, Comment: "支付方式"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "操作人id"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderPayTable holds the schema information for the "order_pay" table.
	OrderPayTable = &schema.Table{
		Name:       "order_pay",
		Columns:    OrderPayColumns,
		PrimaryKey: []*schema.Column{OrderPayColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_pay_order_pay",
				Columns:    []*schema.Column{OrderPayColumns[8]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderpay_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderPayColumns[8]},
			},
		},
	}
	// OrderSalesColumns holds the columns for the "order_sales" table.
	OrderSalesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "sales_id", Type: field.TypeInt64, Nullable: true, Comment: "销售id"},
		{Name: "ratio", Type: field.TypeInt64, Nullable: true},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderSalesTable holds the schema information for the "order_sales" table.
	OrderSalesTable = &schema.Table{
		Name:       "order_sales",
		Columns:    OrderSalesColumns,
		PrimaryKey: []*schema.Column{OrderSalesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_sales_order_sales",
				Columns:    []*schema.Column{OrderSalesColumns[7]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ordersales_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[7]},
			},
			{
				Name:    "ordersales_member_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[4]},
			},
			{
				Name:    "ordersales_sales_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrderTable,
		OrderAmountTable,
		OrderItemTable,
		OrderPayTable,
		OrderSalesTable,
	}
)

func init() {
	OrderTable.Annotation = &entsql.Annotation{
		Table:   "order",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderAmountTable.ForeignKeys[0].RefTable = OrderTable
	OrderAmountTable.Annotation = &entsql.Annotation{
		Table:   "order_amount",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderItemTable.ForeignKeys[0].RefTable = OrderTable
	OrderItemTable.Annotation = &entsql.Annotation{
		Table:   "order_item",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderPayTable.ForeignKeys[0].RefTable = OrderTable
	OrderPayTable.Annotation = &entsql.Annotation{
		Table:   "order_pay",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderSalesTable.ForeignKeys[0].RefTable = OrderTable
	OrderSalesTable.Annotation = &entsql.Annotation{
		Table:   "order_sales",
		Options: "AUTO_INCREMENT = 100000",
	}
}
