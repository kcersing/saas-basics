// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MemberColumns holds the columns for the "member" table.
	MemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password | 密码"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 账号"},
		{Name: "nickname", Type: field.TypeString, Unique: true, Nullable: true, Comment: "nickname | 姓名"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "mobile number | 手机号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:潜在;1:正式;3:冻结;4:到期]", Default: 1},
	}
	// MemberTable holds the schema information for the "member" table.
	MemberTable = &schema.Table{
		Name:       "member",
		Columns:    MemberColumns,
		PrimaryKey: []*schema.Column{MemberColumns[0]},
	}
	// MemberDetailsColumns holds the columns for the "member_details" table.
	MemberDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [0:女性;1:男性;3:保密]", Default: 3},
		{Name: "birthday", Type: field.TypeTime, Nullable: true, Comment: "出生日期"},
		{Name: "money_sum", Type: field.TypeFloat64, Nullable: true, Comment: "消费总金额", Default: 3},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "首次的产品", Default: 0},
		{Name: "product_name", Type: field.TypeString, Nullable: true, Comment: "首次的产品"},
		{Name: "product_venue", Type: field.TypeInt64, Nullable: true, Comment: "首次消费场馆", Default: 0},
		{Name: "product_venue_name", Type: field.TypeString, Nullable: true, Comment: "首次消费场馆"},
		{Name: "entry_sum", Type: field.TypeInt64, Nullable: true, Comment: "进馆总次数", Default: 0},
		{Name: "entry_last_time", Type: field.TypeTime, Nullable: true, Comment: "最后一次进馆时间"},
		{Name: "entry_deadline_time", Type: field.TypeTime, Nullable: true, Comment: "进馆最后期限时间"},
		{Name: "class_last_time", Type: field.TypeTime, Nullable: true, Comment: "最后一次上课时间"},
		{Name: "relation_uid", Type: field.TypeInt64, Nullable: true, Comment: "关联员工", Default: 0},
		{Name: "relation_uname", Type: field.TypeString, Nullable: true, Comment: "关联员工"},
		{Name: "relation_mid", Type: field.TypeInt64, Nullable: true, Comment: "关联会员", Default: 0},
		{Name: "relation_mame", Type: field.TypeString, Nullable: true, Comment: "关联会员"},
		{Name: "create_id", Type: field.TypeInt64, Nullable: true, Comment: "创建人"},
		{Name: "create_name", Type: field.TypeString, Nullable: true, Comment: "创建人"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberDetailsTable holds the schema information for the "member_details" table.
	MemberDetailsTable = &schema.Table{
		Name:       "member_details",
		Columns:    MemberDetailsColumns,
		PrimaryKey: []*schema.Column{MemberDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_details_member_member_details",
				Columns:    []*schema.Column{MemberDetailsColumns[22]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberdetails_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberDetailsColumns[22]},
			},
		},
	}
	// MemberNoteColumns holds the columns for the "member_note" table.
	MemberNoteColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "note", Type: field.TypeString, Nullable: true, Comment: "内部备注", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberNoteTable holds the schema information for the "member_note" table.
	MemberNoteTable = &schema.Table{
		Name:       "member_note",
		Columns:    MemberNoteColumns,
		PrimaryKey: []*schema.Column{MemberNoteColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_note_member_member_notes",
				Columns:    []*schema.Column{MemberNoteColumns[5]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membernote_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberNoteColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MemberTable,
		MemberDetailsTable,
		MemberNoteTable,
	}
)

func init() {
	MemberTable.Annotation = &entsql.Annotation{
		Table:   "member",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberDetailsTable.ForeignKeys[0].RefTable = MemberTable
	MemberDetailsTable.Annotation = &entsql.Annotation{
		Table:   "member_details",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberNoteTable.ForeignKeys[0].RefTable = MemberTable
	MemberNoteTable.Annotation = &entsql.Annotation{
		Table:   "member_note",
		Options: "AUTO_INCREMENT = 100000",
	}
}
