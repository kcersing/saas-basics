// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UTokensColumns holds the columns for the "u_tokens" table.
	UTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, Comment: " User's ID | 用户的ID"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串"},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
		{Name: "user_token", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// UTokensTable holds the schema information for the "u_tokens" table.
	UTokensTable = &schema.Table{
		Name:       "u_tokens",
		Columns:    UTokensColumns,
		PrimaryKey: []*schema.Column{UTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "u_tokens_u_users_token",
				Columns:    []*schema.Column{UTokensColumns[7]},
				RefColumns: []*schema.Column{UUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_user_id",
				Unique:  false,
				Columns: []*schema.Column{UTokensColumns[3]},
			},
			{
				Name:    "token_expired_at",
				Unique:  false,
				Columns: []*schema.Column{UTokensColumns[6]},
			},
		},
	}
	// UUsersColumns holds the columns for the "u_users" table.
	UUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "last update time"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "user's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "password | 密码"},
		{Name: "nickname", Type: field.TypeString, Nullable: true, Comment: "nickname | 昵称"},
		{Name: "side_mode", Type: field.TypeString, Nullable: true, Comment: "template mode | 布局方式", Default: "dark"},
		{Name: "base_color", Type: field.TypeString, Nullable: true, Comment: "base color of template | 后台页面色调", Default: "#fff"},
		{Name: "active_color", Type: field.TypeString, Nullable: true, Comment: "active color of template | 当前激活的颜色设定", Default: "#1890ff"},
		{Name: "role_id", Type: field.TypeInt64, Nullable: true, Comment: "role id | 角色ID", Default: 2},
		{Name: "mobile", Type: field.TypeString, Unique: true, Comment: "mobile number | 手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "job", Type: field.TypeString, Nullable: true, Comment: "职业"},
		{Name: "organization", Type: field.TypeString, Nullable: true, Comment: "部门"},
		{Name: "default_venue_id", Type: field.TypeInt64, Nullable: true, Comment: "登陆后默认场馆ID"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [0:女性;1:男性;3:保密]", Default: 3},
		{Name: "birthday", Type: field.TypeTime, Nullable: true, Comment: "出生日期"},
	}
	// UUsersTable holds the schema information for the "u_users" table.
	UUsersTable = &schema.Table{
		Name:       "u_users",
		Columns:    UUsersColumns,
		PrimaryKey: []*schema.Column{UUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username_email",
				Unique:  true,
				Columns: []*schema.Column{UUsersColumns[4], UUsersColumns[12]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UTokensTable,
		UUsersTable,
	}
)

func init() {
	UTokensTable.ForeignKeys[0].RefTable = UUsersTable
	UTokensTable.Annotation = &entsql.Annotation{
		Table: "u_tokens",
	}
	UUsersTable.Annotation = &entsql.Annotation{
		Table:   "u_users",
		Options: "AUTO_INCREMENT = 100000",
	}
}
