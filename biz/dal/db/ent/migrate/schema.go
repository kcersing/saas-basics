// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysApisColumns holds the columns for the "sys_apis" table.
	SysApisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "path", Type: field.TypeString, Comment: "API path | API 路径"},
		{Name: "title", Type: field.TypeString, Comment: "API title | API 名称"},
		{Name: "description", Type: field.TypeString, Comment: "API description | API 描述"},
		{Name: "api_group", Type: field.TypeString, Comment: "API group | API 分组"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", Default: "POST"},
	}
	// SysApisTable holds the schema information for the "sys_apis" table.
	SysApisTable = &schema.Table{
		Name:       "sys_apis",
		Columns:    SysApisColumns,
		PrimaryKey: []*schema.Column{SysApisColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "api_path_method",
				Unique:  true,
				Columns: []*schema.Column{SysApisColumns[5], SysApisColumns[9]},
			},
		},
	}
	// BannerColumns holds the columns for the "banner" table.
	BannerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "pic", Type: field.TypeString, Comment: "图片"},
		{Name: "link", Type: field.TypeString, Comment: "跳转链接"},
		{Name: "is_show", Type: field.TypeInt64, Nullable: true, Comment: "是否展示 1 展示 2 不展示", Default: 1},
	}
	// BannerTable holds the schema information for the "banner" table.
	BannerTable = &schema.Table{
		Name:       "banner",
		Columns:    BannerColumns,
		PrimaryKey: []*schema.Column{BannerColumns[0]},
	}
	// BootcampColumns holds the columns for the "bootcamp" table.
	BootcampColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "训练营名称"},
		{Name: "sign_number", Type: field.TypeInt64, Nullable: true, Comment: "报名人数"},
		{Name: "sign_start_at", Type: field.TypeTime, Nullable: true, Comment: "报名开始时间"},
		{Name: "sign_end_at", Type: field.TypeTime, Nullable: true, Comment: "报名结束时间"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "训练营开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "训练营结束时间"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "图片"},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "is_fee", Type: field.TypeInt64, Nullable: true, Comment: "是否有费用 1 无 2 有", Default: 1},
		{Name: "is_show", Type: field.TypeInt64, Nullable: true, Comment: "是否展示 1 展示 2 不展示", Default: 1},
		{Name: "is_cancel", Type: field.TypeInt64, Nullable: true, Comment: "是否支持取消报名 0支持 1不支持", Default: 0},
		{Name: "cancel_time", Type: field.TypeInt64, Nullable: true, Comment: "取消时间", Default: 0},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "详情"},
		{Name: "sign_fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "报名信息"},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:未报名;2:报名中;3:进行中;4:;5:已结束]", Default: 1},
	}
	// BootcampTable holds the schema information for the "bootcamp" table.
	BootcampTable = &schema.Table{
		Name:       "bootcamp",
		Columns:    BootcampColumns,
		PrimaryKey: []*schema.Column{BootcampColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "bootcamp_name_sign_start_at_sign_end_at_start_at_end_at",
				Unique:  true,
				Columns: []*schema.Column{BootcampColumns[6], BootcampColumns[8], BootcampColumns[9], BootcampColumns[10], BootcampColumns[11]},
			},
		},
	}
	// BootcampParticipantColumns holds the columns for the "bootcamp_participant" table.
	BootcampParticipantColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "手机号"},
		{Name: "fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "更多"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单ID", Default: 0},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号", Default: ""},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员ID", Default: 0},
		{Name: "bootcamp_id", Type: field.TypeInt64, Nullable: true, Comment: "训练营id"},
	}
	// BootcampParticipantTable holds the schema information for the "bootcamp_participant" table.
	BootcampParticipantTable = &schema.Table{
		Name:       "bootcamp_participant",
		Columns:    BootcampParticipantColumns,
		PrimaryKey: []*schema.Column{BootcampParticipantColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bootcamp_participant_bootcamp_bootcamp_participants",
				Columns:    []*schema.Column{BootcampParticipantColumns[13]},
				RefColumns: []*schema.Column{BootcampColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "bootcampparticipant_name_mobile",
				Unique:  true,
				Columns: []*schema.Column{BootcampParticipantColumns[6], BootcampParticipantColumns[7]},
			},
		},
	}
	// CommunityColumns holds the columns for the "community" table.
	CommunityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "社群名称"},
		{Name: "sign_number", Type: field.TypeInt64, Nullable: true, Comment: "报名人数"},
		{Name: "sign_start_at", Type: field.TypeTime, Nullable: true, Comment: "报名开始时间"},
		{Name: "sign_end_at", Type: field.TypeTime, Nullable: true, Comment: "报名结束时间"},
		{Name: "number", Type: field.TypeInt64, Nullable: true, Comment: "社群人数"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "社群开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "社群结束时间"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "社群图片"},
		{Name: "sponsor", Type: field.TypeString, Nullable: true, Comment: "主办方"},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "is_fee", Type: field.TypeInt64, Nullable: true, Comment: "是否有费用 1 无 2 有", Default: 1},
		{Name: "is_show", Type: field.TypeInt64, Nullable: true, Comment: "是否展示 1 展示 2 不展示", Default: 1},
		{Name: "is_cancel", Type: field.TypeInt64, Nullable: true, Comment: "是否支持取消报名 0支持 1不支持", Default: 0},
		{Name: "cancel_time", Type: field.TypeInt64, Nullable: true, Comment: "取消时间", Default: 0},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "详情"},
		{Name: "sign_fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "报名信息"},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:未报名;2:报名中;3:活动未开始;4:活动中;5:已结束]", Default: 1},
	}
	// CommunityTable holds the schema information for the "community" table.
	CommunityTable = &schema.Table{
		Name:       "community",
		Columns:    CommunityColumns,
		PrimaryKey: []*schema.Column{CommunityColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "community_name_sign_start_at_sign_end_at_start_at_end_at",
				Unique:  true,
				Columns: []*schema.Column{CommunityColumns[6], CommunityColumns[8], CommunityColumns[9], CommunityColumns[11], CommunityColumns[12]},
			},
		},
	}
	// CommunityParticipantColumns holds the columns for the "community_participant" table.
	CommunityParticipantColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "手机号"},
		{Name: "fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "更多"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单ID", Default: 0},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号", Default: ""},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员ID", Default: 0},
		{Name: "community_id", Type: field.TypeInt64, Nullable: true, Comment: "社群id"},
	}
	// CommunityParticipantTable holds the schema information for the "community_participant" table.
	CommunityParticipantTable = &schema.Table{
		Name:       "community_participant",
		Columns:    CommunityParticipantColumns,
		PrimaryKey: []*schema.Column{CommunityParticipantColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "community_participant_community_community_participants",
				Columns:    []*schema.Column{CommunityParticipantColumns[13]},
				RefColumns: []*schema.Column{CommunityColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "communityparticipant_name_mobile",
				Unique:  true,
				Columns: []*schema.Column{CommunityParticipantColumns[6], CommunityParticipantColumns[7]},
			},
		},
	}
	// ContestColumns holds the columns for the "contest" table.
	ContestColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "比赛名称"},
		{Name: "sign_number", Type: field.TypeInt64, Nullable: true, Comment: "报名人数"},
		{Name: "sign_start_at", Type: field.TypeTime, Nullable: true, Comment: "报名开始时间"},
		{Name: "sign_end_at", Type: field.TypeTime, Nullable: true, Comment: "报名结束时间"},
		{Name: "number", Type: field.TypeInt64, Nullable: true, Comment: "参赛人数"},
		{Name: "start_at", Type: field.TypeTime, Nullable: true, Comment: "比赛开始时间"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "比赛结束时间"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "比赛图片"},
		{Name: "sponsor", Type: field.TypeString, Nullable: true, Comment: "主办方"},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "is_fee", Type: field.TypeInt64, Nullable: true, Comment: "是否有费用 1 无 2 有", Default: 1},
		{Name: "is_show", Type: field.TypeInt64, Nullable: true, Comment: "是否展示 1 展示 2 不展示", Default: 1},
		{Name: "is_cancel", Type: field.TypeInt64, Nullable: true, Comment: "是否支持取消报名 0支持 1不支持", Default: 0},
		{Name: "cancel_time", Type: field.TypeInt64, Nullable: true, Comment: "取消时间", Default: 0},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "详情"},
		{Name: "sign_fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "报名信息"},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:未报名;2:报名中;3:未比赛;4:比赛中;5:比赛结束]", Default: 1},
	}
	// ContestTable holds the schema information for the "contest" table.
	ContestTable = &schema.Table{
		Name:       "contest",
		Columns:    ContestColumns,
		PrimaryKey: []*schema.Column{ContestColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "contest_name_sign_start_at_sign_end_at_start_at_end_at",
				Unique:  true,
				Columns: []*schema.Column{ContestColumns[6], ContestColumns[8], ContestColumns[9], ContestColumns[11], ContestColumns[12]},
			},
		},
	}
	// ContestParticipantColumns holds the columns for the "contest_participant" table.
	ContestParticipantColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "手机号"},
		{Name: "fields", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "更多"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单ID", Default: 0},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号", Default: ""},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "费用"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员ID", Default: 0},
		{Name: "contest_id", Type: field.TypeInt64, Nullable: true, Comment: "赛事id"},
	}
	// ContestParticipantTable holds the schema information for the "contest_participant" table.
	ContestParticipantTable = &schema.Table{
		Name:       "contest_participant",
		Columns:    ContestParticipantColumns,
		PrimaryKey: []*schema.Column{ContestParticipantColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contest_participant_contest_contest_participants",
				Columns:    []*schema.Column{ContestParticipantColumns[13]},
				RefColumns: []*schema.Column{ContestColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contestparticipant_name_mobile",
				Unique:  true,
				Columns: []*schema.Column{ContestParticipantColumns[6], ContestParticipantColumns[7]},
			},
		},
	}
	// ContractsColumns holds the columns for the "contracts" table.
	ContractsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 名称"},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "content | 内容"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// ContractsTable holds the schema information for the "contracts" table.
	ContractsTable = &schema.Table{
		Name:       "contracts",
		Columns:    ContractsColumns,
		PrimaryKey: []*schema.Column{ContractsColumns[0]},
	}
	// SysDictionariesColumns holds the columns for the "sys_dictionaries" table.
	SysDictionariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "the name of dictionary for search | 字典搜索名称"},
		{Name: "description", Type: field.TypeString, Comment: "the description of dictionary | 字典描述"},
	}
	// SysDictionariesTable holds the schema information for the "sys_dictionaries" table.
	SysDictionariesTable = &schema.Table{
		Name:       "sys_dictionaries",
		Columns:    SysDictionariesColumns,
		PrimaryKey: []*schema.Column{SysDictionariesColumns[0]},
	}
	// SysDictionaryDetailsColumns holds the columns for the "sys_dictionary_details" table.
	SysDictionaryDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "key", Type: field.TypeString, Comment: "key | 键"},
		{Name: "value", Type: field.TypeString, Comment: "value | 值"},
		{Name: "dictionary_id", Type: field.TypeInt64, Nullable: true, Comment: "Dictionary ID | 字典ID"},
	}
	// SysDictionaryDetailsTable holds the schema information for the "sys_dictionary_details" table.
	SysDictionaryDetailsTable = &schema.Table{
		Name:       "sys_dictionary_details",
		Columns:    SysDictionaryDetailsColumns,
		PrimaryKey: []*schema.Column{SysDictionaryDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dictionary_details_sys_dictionaries_dictionary_details",
				Columns:    []*schema.Column{SysDictionaryDetailsColumns[9]},
				RefColumns: []*schema.Column{SysDictionariesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntryLogsColumns holds the columns for the "entry_logs" table.
	EntryLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "entry_time", Type: field.TypeTime, Nullable: true, Comment: "进场时间"},
		{Name: "leaving_time", Type: field.TypeTime, Nullable: true, Comment: "离场时间"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id", Default: 0},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "用户产品id"},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true, Comment: "用户id", Default: 0},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// EntryLogsTable holds the schema information for the "entry_logs" table.
	EntryLogsTable = &schema.Table{
		Name:       "entry_logs",
		Columns:    EntryLogsColumns,
		PrimaryKey: []*schema.Column{EntryLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entry_logs_member_member_entry",
				Columns:    []*schema.Column{EntryLogsColumns[7]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "entry_logs_member_product_member_product_entry",
				Columns:    []*schema.Column{EntryLogsColumns[8]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "entry_logs_sys_users_user_entry",
				Columns:    []*schema.Column{EntryLogsColumns[9]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "entry_logs_venue_venue_entry",
				Columns:    []*schema.Column{EntryLogsColumns[10]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "entrylogs_venue_id_member_id_user_id",
				Unique:  false,
				Columns: []*schema.Column{EntryLogsColumns[10], EntryLogsColumns[7], EntryLogsColumns[9]},
			},
		},
	}
	// SysLogsColumns holds the columns for the "sys_logs" table.
	SysLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "type of log | 日志类型"},
		{Name: "method", Type: field.TypeString, Comment: "method of log | 日志请求方法"},
		{Name: "api", Type: field.TypeString, Comment: "api of log | 日志请求api"},
		{Name: "success", Type: field.TypeBool, Comment: "success of log | 日志请求是否成功"},
		{Name: "req_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of request log | 日志请求内容"},
		{Name: "resp_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of response log | 日志返回内容"},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "ip of log | 日志IP"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "user_agent of log | 日志用户客户端"},
		{Name: "operator", Type: field.TypeString, Nullable: true, Comment: "operator of log | 日志操作者"},
		{Name: "time", Type: field.TypeInt, Nullable: true, Comment: "time of log(millisecond) | 日志时间(毫秒)"},
	}
	// SysLogsTable holds the schema information for the "sys_logs" table.
	SysLogsTable = &schema.Table{
		Name:       "sys_logs",
		Columns:    SysLogsColumns,
		PrimaryKey: []*schema.Column{SysLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logs_api",
				Unique:  false,
				Columns: []*schema.Column{SysLogsColumns[7]},
			},
		},
	}
	// MemberColumns holds the columns for the "member" table.
	MemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password | 密码"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Comment: "账号 "},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "mobile number | 手机号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
	}
	// MemberTable holds the schema information for the "member" table.
	MemberTable = &schema.Table{
		Name:       "member",
		Columns:    MemberColumns,
		PrimaryKey: []*schema.Column{MemberColumns[0]},
	}
	// MemberContractColumns holds the columns for the "member_contract" table.
	MemberContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品ID"},
		{Name: "contract_id", Type: field.TypeInt64, Nullable: true, Comment: "原始合同id"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 名称"},
		{Name: "sign", Type: field.TypeString, Nullable: true, Comment: "sign | 签字"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员产品id"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// MemberContractTable holds the schema information for the "member_contract" table.
	MemberContractTable = &schema.Table{
		Name:       "member_contract",
		Columns:    MemberContractColumns,
		PrimaryKey: []*schema.Column{MemberContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_contract_member_member_contents",
				Columns:    []*schema.Column{MemberContractColumns[11]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "member_contract_member_product_member_product_contents",
				Columns:    []*schema.Column{MemberContractColumns[12]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "member_contract_order_order_contents",
				Columns:    []*schema.Column{MemberContractColumns[13]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membercontract_order_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[13]},
			},
			{
				Name:    "membercontract_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[11]},
			},
			{
				Name:    "membercontract_member_product_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[12]},
			},
		},
	}
	// MemberContractContentColumns holds the columns for the "member_contract_content" table.
	MemberContractContentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "content | 内容"},
		{Name: "sign_img", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "sign_img | 会员签字b64 预处理"},
		{Name: "member_contract_id", Type: field.TypeInt64, Nullable: true, Comment: "合同ID"},
	}
	// MemberContractContentTable holds the schema information for the "member_contract_content" table.
	MemberContractContentTable = &schema.Table{
		Name:       "member_contract_content",
		Columns:    MemberContractContentColumns,
		PrimaryKey: []*schema.Column{MemberContractContentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_contract_content_member_contract_content",
				Columns:    []*schema.Column{MemberContractContentColumns[7]},
				RefColumns: []*schema.Column{MemberContractColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membercontractcontent_member_contract_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractContentColumns[7]},
			},
		},
	}
	// MemberDetailsColumns holds the columns for the "member_details" table.
	MemberDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "money_sum", Type: field.TypeFloat64, Nullable: true, Comment: "消费总金额", Default: 3},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "首次的产品", Default: 0},
		{Name: "product_name", Type: field.TypeString, Nullable: true, Comment: "首次的产品"},
		{Name: "entry_sum", Type: field.TypeInt64, Nullable: true, Comment: "进馆总次数", Default: 0},
		{Name: "entry_last_time", Type: field.TypeTime, Nullable: true, Comment: "最后一次进馆时间"},
		{Name: "entry_deadline_time", Type: field.TypeTime, Nullable: true, Comment: "进馆最后期限时间"},
		{Name: "class_last_time", Type: field.TypeTime, Nullable: true, Comment: "最后一次上课时间"},
		{Name: "relation_uid", Type: field.TypeInt64, Nullable: true, Comment: "跟进人员工", Default: 0},
		{Name: "relation_uname", Type: field.TypeString, Nullable: true, Comment: "跟进人员工"},
		{Name: "relation_mid", Type: field.TypeInt64, Nullable: true, Comment: "关联会员", Default: 0},
		{Name: "relation_mame", Type: field.TypeString, Nullable: true, Comment: "关联会员"},
		{Name: "first_time", Type: field.TypeTime, Nullable: true, Comment: "成为会员时间"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberDetailsTable holds the schema information for the "member_details" table.
	MemberDetailsTable = &schema.Table{
		Name:       "member_details",
		Columns:    MemberDetailsColumns,
		PrimaryKey: []*schema.Column{MemberDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_details_member_member_details",
				Columns:    []*schema.Column{MemberDetailsColumns[18]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberdetails_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberDetailsColumns[18]},
			},
		},
	}
	// MemberNoteColumns holds the columns for the "member_note" table.
	MemberNoteColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "note", Type: field.TypeString, Nullable: true, Comment: "内部备注", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberNoteTable holds the schema information for the "member_note" table.
	MemberNoteTable = &schema.Table{
		Name:       "member_note",
		Columns:    MemberNoteColumns,
		PrimaryKey: []*schema.Column{MemberNoteColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_note_member_member_notes",
				Columns:    []*schema.Column{MemberNoteColumns[8]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membernote_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberNoteColumns[8]},
			},
		},
	}
	// MemberProductColumns holds the columns for the "member_product" table.
	MemberProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "编号"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "sub_type", Type: field.TypeString, Nullable: true, Comment: "次级类型", Default: ""},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品ID"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆ID"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单ID"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "产品名称"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "单价"},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true, Comment: "总价"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "总时长"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "单次时长"},
		{Name: "number", Type: field.TypeInt64, Nullable: true, Comment: "总次数", Default: 0},
		{Name: "number_surplus", Type: field.TypeInt64, Nullable: true, Comment: "剩余次数", Default: 0},
		{Name: "is_course", Type: field.TypeInt64, Nullable: true, Comment: "課包 课程1不限2指定", Default: 1},
		{Name: "deadline", Type: field.TypeInt64, Nullable: true, Comment: "激活期限"},
		{Name: "validity_at", Type: field.TypeTime, Nullable: true, Comment: "生效时间"},
		{Name: "cancel_at", Type: field.TypeTime, Nullable: true, Comment: "作废时间"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberProductTable holds the schema information for the "member_product" table.
	MemberProductTable = &schema.Table{
		Name:       "member_product",
		Columns:    MemberProductColumns,
		PrimaryKey: []*schema.Column{MemberProductColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_member_member_products",
				Columns:    []*schema.Column{MemberProductColumns[23]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberproduct_venue_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[10]},
			},
			{
				Name:    "memberproduct_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[23]},
			},
			{
				Name:    "memberproduct_product_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[9]},
			},
			{
				Name:    "memberproduct_order_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[11]},
			},
		},
	}
	// MemberProductCoursesColumns holds the columns for the "member_product_courses" table.
	MemberProductCoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "课名", Default: ""},
		{Name: "courses_id", Type: field.TypeInt64, Nullable: true, Comment: "课名称", Default: 0},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品名称", Default: 0},
	}
	// MemberProductCoursesTable holds the schema information for the "member_product_courses" table.
	MemberProductCoursesTable = &schema.Table{
		Name:       "member_product_courses",
		Columns:    MemberProductCoursesColumns,
		PrimaryKey: []*schema.Column{MemberProductCoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_courses_member_product_memberCourses",
				Columns:    []*schema.Column{MemberProductCoursesColumns[9]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "member_product_courses_member_product_memberLessons",
				Columns:    []*schema.Column{MemberProductCoursesColumns[9]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberproductcourses_id",
				Unique:  true,
				Columns: []*schema.Column{MemberProductCoursesColumns[0]},
			},
		},
	}
	// MemberProfileColumns holds the columns for the "member_profile" table.
	MemberProfileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "intention", Type: field.TypeInt64, Nullable: true, Comment: "意向", Default: 0},
		{Name: "source", Type: field.TypeInt64, Nullable: true, Comment: "来源", Default: 0},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 名称"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:潜在;2:正式]", Default: 1},
		{Name: "mobile_ascription", Type: field.TypeInt64, Nullable: true, Comment: "手机号归属", Default: 0},
		{Name: "father_name", Type: field.TypeString, Nullable: true, Comment: "父亲名称"},
		{Name: "mother_name", Type: field.TypeString, Nullable: true, Comment: "母亲名称"},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [1:女性;2:男性;3:保密]", Default: 3},
		{Name: "birthday", Type: field.TypeTime, Nullable: true, Comment: "出生日期"},
		{Name: "grade", Type: field.TypeInt64, Nullable: true, Comment: "年级", Default: 0},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberProfileTable holds the schema information for the "member_profile" table.
	MemberProfileTable = &schema.Table{
		Name:       "member_profile",
		Columns:    MemberProfileColumns,
		PrimaryKey: []*schema.Column{MemberProfileColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_profile_member_member_profile",
				Columns:    []*schema.Column{MemberProfileColumns[18]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberprofile_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProfileColumns[18]},
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "index path | 菜单路由路径", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "index name | 菜单名称"},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Comment: "sort | 排序编号", Default: 0},
		{Name: "disabled", Type: field.TypeInt64, Nullable: true, Comment: "disable status | 是否停用", Default: 0},
		{Name: "ignore", Type: field.TypeBool, Nullable: true, Comment: "当前路由是否渲染菜单项，为 true 的话不会在菜单中显示，但可通过路由地址访问", Default: false},
		{Name: "level", Type: field.TypeInt64, Nullable: true, Comment: "menu level | 菜单层级"},
		{Name: "menu_type", Type: field.TypeInt64, Nullable: true, Comment: "menu type | 菜单类型 0 目录 1 菜单 2 按钮"},
		{Name: "redirect", Type: field.TypeString, Nullable: true, Comment: "redirect path | 跳转路径 （外链）", Default: ""},
		{Name: "component", Type: field.TypeString, Nullable: true, Comment: "the path of vue file | 组件路径", Default: ""},
		{Name: "url", Type: field.TypeString, Nullable: true, Comment: "url | ", Default: ""},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Comment: "hidden | 是否隐藏菜单", Default: true},
		{Name: "title", Type: field.TypeString, Nullable: true, Comment: "menu name | 菜单显示标题"},
		{Name: "icon", Type: field.TypeString, Nullable: true, Comment: "menu icon | 菜单图标"},
		{Name: "active_menu", Type: field.TypeString, Nullable: true, Comment: "set the active menu | 激活菜单", Default: ""},
		{Name: "affix", Type: field.TypeBool, Nullable: true, Comment: "affix tab | Tab 固定", Default: false},
		{Name: "no_cache", Type: field.TypeBool, Nullable: true, Comment: "do not keep alive the tab | 取消页面缓存", Default: false},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "type | 类型 数据字典menu_type", Default: ""},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "parent menu ID | 父菜单ID"},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[23]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenuParamsColumns holds the columns for the "sys_menu_params" table.
	SysMenuParamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "pass parameters via params or query | 参数类型"},
		{Name: "key", Type: field.TypeString, Comment: "the key of parameters | 参数键"},
		{Name: "value", Type: field.TypeString, Comment: "the value of parameters | 参数值"},
		{Name: "menu_params", Type: field.TypeInt64, Nullable: true},
	}
	// SysMenuParamsTable holds the schema information for the "sys_menu_params" table.
	SysMenuParamsTable = &schema.Table{
		Name:       "sys_menu_params",
		Columns:    SysMenuParamsColumns,
		PrimaryKey: []*schema.Column{SysMenuParamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menu_params_sys_menus_params",
				Columns:    []*schema.Column{SysMenuParamsColumns[8]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "类型[1:用户user;2:会员member]"},
		{Name: "to_user_id", Type: field.TypeString, Comment: "该消息接受者ID"},
		{Name: "from_user_id", Type: field.TypeString, Comment: "该消息发送者ID"},
		{Name: "content", Type: field.TypeString, Comment: "消息内容"},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "messages_to_user_id_from_user_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[6], MessagesColumns[7]},
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "order_sn", Type: field.TypeString, Nullable: true, Comment: "订单编号"},
		{Name: "nature", Type: field.TypeString, Nullable: true, Comment: "业务类型"},
		{Name: "product_type", Type: field.TypeString, Nullable: true, Comment: "产品类型"},
		{Name: "product_sub_type", Type: field.TypeString, Nullable: true, Comment: "产品类型"},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态 | [1:待付款]", Default: 1},
		{Name: "source", Type: field.TypeString, Nullable: true, Comment: "订单来源", Default: ""},
		{Name: "device", Type: field.TypeString, Nullable: true, Comment: "设备来源", Default: ""},
		{Name: "completion_at", Type: field.TypeTime, Nullable: true, Comment: "订单完成时间"},
		{Name: "refund_at", Type: field.TypeTime, Nullable: true, Comment: "订单退费时间"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_member_member_orders",
				Columns:    []*schema.Column{OrderColumns[13]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_sys_users_created_orders",
				Columns:    []*schema.Column{OrderColumns[14]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_venue_venue_orders",
				Columns:    []*schema.Column{OrderColumns[15]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "order_order_sn",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[4]},
			},
			{
				Name:    "order_venue_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[15]},
			},
			{
				Name:    "order_member_id",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[13]},
			},
			{
				Name:    "order_completion_at",
				Unique:  false,
				Columns: []*schema.Column{OrderColumns[11]},
			},
		},
	}
	// OrderAmountColumns holds the columns for the "order_amount" table.
	OrderAmountColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "total", Type: field.TypeFloat64, Nullable: true, Comment: "总金额"},
		{Name: "actual", Type: field.TypeFloat64, Nullable: true, Comment: "实际已付款"},
		{Name: "residue", Type: field.TypeFloat64, Nullable: true, Comment: "未支付金额"},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderAmountTable holds the schema information for the "order_amount" table.
	OrderAmountTable = &schema.Table{
		Name:       "order_amount",
		Columns:    OrderAmountColumns,
		PrimaryKey: []*schema.Column{OrderAmountColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_amount_order_amount",
				Columns:    []*schema.Column{OrderAmountColumns[9]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderamount_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderAmountColumns[9]},
			},
		},
	}
	// OrderItemColumns holds the columns for the "order_item" table.
	OrderItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "number", Type: field.TypeInt64, Nullable: true, Comment: "数量", Default: 1},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品id"},
		{Name: "related_user_product_id", Type: field.TypeInt64, Nullable: true, Comment: "关联会员产品id", Default: 0},
		{Name: "contest_id", Type: field.TypeInt64, Nullable: true, Comment: "赛事id"},
		{Name: "bootcamp_id", Type: field.TypeInt64, Nullable: true, Comment: "训练营id"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "data", Type: field.TypeJSON, Nullable: true, Comment: "数据附件"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderItemTable holds the schema information for the "order_item" table.
	OrderItemTable = &schema.Table{
		Name:       "order_item",
		Columns:    OrderItemColumns,
		PrimaryKey: []*schema.Column{OrderItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_order_item",
				Columns:    []*schema.Column{OrderItemColumns[12]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderitem_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderItemColumns[12]},
			},
			{
				Name:    "orderitem_product_id",
				Unique:  false,
				Columns: []*schema.Column{OrderItemColumns[6]},
			},
		},
	}
	// OrderPayColumns holds the columns for the "order_pay" table.
	OrderPayColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "remission", Type: field.TypeFloat64, Nullable: true, Comment: "减免"},
		{Name: "pay", Type: field.TypeFloat64, Nullable: true, Comment: "实际付款"},
		{Name: "note", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "pay_at", Type: field.TypeTime, Nullable: true, Comment: "支付时间"},
		{Name: "pay_way", Type: field.TypeString, Nullable: true, Comment: "支付方式"},
		{Name: "pay_sn", Type: field.TypeString, Nullable: true, Comment: "支付单号"},
		{Name: "prepay_id", Type: field.TypeString, Nullable: true, Comment: "预支付交易会话标识"},
		{Name: "pay_extra", Type: field.TypeJSON, Nullable: true, Comment: "支付额外信息"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderPayTable holds the schema information for the "order_pay" table.
	OrderPayTable = &schema.Table{
		Name:       "order_pay",
		Columns:    OrderPayColumns,
		PrimaryKey: []*schema.Column{OrderPayColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_pay_order_pay",
				Columns:    []*schema.Column{OrderPayColumns[13]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderpay_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderPayColumns[13]},
			},
		},
	}
	// OrderSalesColumns holds the columns for the "order_sales" table.
	OrderSalesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "sales_id", Type: field.TypeInt64, Nullable: true, Comment: "销售id"},
		{Name: "ratio", Type: field.TypeInt64, Nullable: true},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
	}
	// OrderSalesTable holds the schema information for the "order_sales" table.
	OrderSalesTable = &schema.Table{
		Name:       "order_sales",
		Columns:    OrderSalesColumns,
		PrimaryKey: []*schema.Column{OrderSalesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_sales_order_sales",
				Columns:    []*schema.Column{OrderSalesColumns[9]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ordersales_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[9]},
			},
			{
				Name:    "ordersales_member_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[6]},
			},
			{
				Name:    "ordersales_sales_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSalesColumns[7]},
			},
		},
	}
	// ProductColumns holds the columns for the "product" table.
	ProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型", Default: ""},
		{Name: "sub_type", Type: field.TypeString, Nullable: true, Comment: "次级类型", Default: ""},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "商品名", Default: ""},
		{Name: "stock", Type: field.TypeInt64, Nullable: true, Comment: "库存", Default: 0},
		{Name: "deadline", Type: field.TypeInt64, Nullable: true, Comment: "激活期限", Default: 0},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "有效期", Default: 0},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "课程课时", Default: 0},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "售价", Default: 0},
		{Name: "times", Type: field.TypeInt64, Nullable: true, Comment: "次数", Default: 0},
		{Name: "is_lessons", Type: field.TypeInt64, Nullable: true, Comment: "团课预约 1支持2不支持", Default: 1},
		{Name: "is_course", Type: field.TypeInt64, Nullable: true, Comment: "課包 课程1不限2指定", Default: 1},
		{Name: "sales", Type: field.TypeJSON, Nullable: true, Comment: "售卖信息[售价等]"},
		{Name: "is_sales", Type: field.TypeInt64, Nullable: true, Comment: "销售方式 1会员端", Default: 1},
		{Name: "sign_sales_at", Type: field.TypeTime, Nullable: true, Comment: "开始售卖时间"},
		{Name: "end_sales_at", Type: field.TypeTime, Nullable: true, Comment: "结束售卖时间"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "主图", Default: ""},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "详情", Default: ""},
	}
	// ProductTable holds the schema information for the "product" table.
	ProductTable = &schema.Table{
		Name:       "product",
		Columns:    ProductColumns,
		PrimaryKey: []*schema.Column{ProductColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "product_id",
				Unique:  true,
				Columns: []*schema.Column{ProductColumns[0]},
			},
		},
	}
	// ProductCoursesColumns holds the columns for the "product_courses" table.
	ProductCoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型", Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "课名", Default: ""},
		{Name: "courses_id", Type: field.TypeInt64, Nullable: true, Comment: "课名称", Default: 0},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品名称", Default: 0},
	}
	// ProductCoursesTable holds the schema information for the "product_courses" table.
	ProductCoursesTable = &schema.Table{
		Name:       "product_courses",
		Columns:    ProductCoursesColumns,
		PrimaryKey: []*schema.Column{ProductCoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_courses_product_courses",
				Columns:    []*schema.Column{ProductCoursesColumns[9]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_courses_product_lessons",
				Columns:    []*schema.Column{ProductCoursesColumns[9]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "productcourses_id",
				Unique:  true,
				Columns: []*schema.Column{ProductCoursesColumns[0]},
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "role name | 角色名"},
		{Name: "value", Type: field.TypeString, Unique: true, Comment: "role value for permission control in front end | 角色值，用于前端权限控制"},
		{Name: "default_router", Type: field.TypeString, Comment: "default menu : dashboard | 默认登录页面", Default: "dashboard"},
		{Name: "remark", Type: field.TypeString, Comment: "remark | 备注", Default: ""},
		{Name: "order_no", Type: field.TypeInt64, Comment: "order number | 排序编号", Default: 0},
		{Name: "apis", Type: field.TypeJSON, Comment: "接口权限列表 | 接口权限列表"},
		{Name: "venue_id", Type: field.TypeInt64, Comment: "场馆ID", Default: 0},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
	}
	// ScheduleColumns holds the columns for the "schedule" table.
	ScheduleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "课程"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "时长"},
		{Name: "place_id", Type: field.TypeInt64, Nullable: true, Comment: "场地ID"},
		{Name: "num", Type: field.TypeInt64, Nullable: true, Comment: "上课人数"},
		{Name: "num_surplus", Type: field.TypeInt64, Nullable: true, Comment: "剩余可约人数"},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "日期"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "课程价格", Default: 0},
		{Name: "venue_name", Type: field.TypeString, Nullable: true, Comment: "场馆名称"},
		{Name: "place_name", Type: field.TypeString, Nullable: true, Comment: "场地名称"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
	}
	// ScheduleTable holds the schema information for the "schedule" table.
	ScheduleTable = &schema.Table{
		Name:       "schedule",
		Columns:    ScheduleColumns,
		PrimaryKey: []*schema.Column{ScheduleColumns[0]},
	}
	// ScheduleCoachColumns holds the columns for the "schedule_coach" table.
	ScheduleCoachColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "coach_id", Type: field.TypeInt64, Nullable: true, Comment: "教练ID"},
		{Name: "place_id", Type: field.TypeInt64, Nullable: true, Comment: "场地ID"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "课程"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "日期"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "coach_name", Type: field.TypeString, Nullable: true, Comment: "教练名称"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// ScheduleCoachTable holds the schema information for the "schedule_coach" table.
	ScheduleCoachTable = &schema.Table{
		Name:       "schedule_coach",
		Columns:    ScheduleCoachColumns,
		PrimaryKey: []*schema.Column{ScheduleCoachColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "schedule_coach_schedule_coachs",
				Columns:    []*schema.Column{ScheduleCoachColumns[18]},
				RefColumns: []*schema.Column{ScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "schedulecoach_venue_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleCoachColumns[6]},
			},
			{
				Name:    "schedulecoach_coach_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleCoachColumns[7]},
			},
			{
				Name:    "schedulecoach_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleCoachColumns[18]},
			},
		},
	}
	// ScheduleMemberColumns holds the columns for the "schedule_member" table.
	ScheduleMemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "place_id", Type: field.TypeInt64, Nullable: true, Comment: "场地ID"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "课程"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员购买课ID"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "日期"},
		{Name: "start_time", Type: field.TypeTime, Nullable: true, Comment: "开始时间"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true, Comment: "结束时间"},
		{Name: "sign_start_time", Type: field.TypeTime, Nullable: true, Comment: "上课签到时间"},
		{Name: "sign_end_time", Type: field.TypeTime, Nullable: true, Comment: "下课签到时间"},
		{Name: "seat", Type: field.TypeJSON, Nullable: true, Comment: "座位"},
		{Name: "is_course", Type: field.TypeInt64, Nullable: true, Comment: "課包 1支持2不支持", Default: 1},
		{Name: "member_name", Type: field.TypeString, Nullable: true, Comment: "会员名称"},
		{Name: "member_product_name", Type: field.TypeString, Nullable: true, Comment: "会员产品名称"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注"},
		{Name: "schedule_id", Type: field.TypeInt64, Nullable: true, Comment: "课程ID"},
	}
	// ScheduleMemberTable holds the schema information for the "schedule_member" table.
	ScheduleMemberTable = &schema.Table{
		Name:       "schedule_member",
		Columns:    ScheduleMemberColumns,
		PrimaryKey: []*schema.Column{ScheduleMemberColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "schedule_member_schedule_members",
				Columns:    []*schema.Column{ScheduleMemberColumns[22]},
				RefColumns: []*schema.Column{ScheduleColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "schedulemember_venue_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleMemberColumns[6]},
			},
			{
				Name:    "schedulemember_member_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleMemberColumns[9]},
			},
			{
				Name:    "schedulemember_schedule_id",
				Unique:  false,
				Columns: []*schema.Column{ScheduleMemberColumns[22]},
			},
		},
	}
	// SysTokensColumns holds the columns for the "sys_tokens" table.
	SysTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, Comment: " User's ID | 用户的ID"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串"},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
		{Name: "user_token", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// SysTokensTable holds the schema information for the "sys_tokens" table.
	SysTokensTable = &schema.Table{
		Name:       "sys_tokens",
		Columns:    SysTokensColumns,
		PrimaryKey: []*schema.Column{SysTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_tokens_sys_users_token",
				Columns:    []*schema.Column{SysTokensColumns[9]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[5]},
			},
			{
				Name:    "token_expired_at",
				Unique:  false,
				Columns: []*schema.Column{SysTokensColumns[8]},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "mobile", Type: field.TypeString, Unique: true, Comment: "mobile number | 手机号"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 姓名"},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [0:女性;1:男性;3:保密]", Default: 3},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "user's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "password | 密码"},
		{Name: "functions", Type: field.TypeJSON, Comment: "functions | 职能"},
		{Name: "type", Type: field.TypeInt64, Nullable: true, Comment: "账号类别1普通 2管理员", Default: 1},
		{Name: "job_time", Type: field.TypeInt64, Nullable: true, Comment: "job time | [1:全职;2:兼职;]", Default: 1},
		{Name: "default_venue_id", Type: field.TypeInt64, Nullable: true, Comment: "登陆后默认场馆ID"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "detail", Type: field.TypeString, Nullable: true, Comment: "详情"},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username_mobile",
				Unique:  true,
				Columns: []*schema.Column{SysUsersColumns[9], SysUsersColumns[6]},
			},
		},
	}
	// SysUserTimePeriodColumns holds the columns for the "sys_user_time_period" table.
	SysUserTimePeriodColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "date", Type: field.TypeTime, Nullable: true, Comment: "日期"},
		{Name: "period", Type: field.TypeJSON, Nullable: true, Comment: "时间段"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "id"},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true, Comment: "員工id"},
	}
	// SysUserTimePeriodTable holds the schema information for the "sys_user_time_period" table.
	SysUserTimePeriodTable = &schema.Table{
		Name:       "sys_user_time_period",
		Columns:    SysUserTimePeriodColumns,
		PrimaryKey: []*schema.Column{SysUserTimePeriodColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_user_time_period_sys_users_user_time_period",
				Columns:    []*schema.Column{SysUserTimePeriodColumns[9]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VenueColumns holds the columns for the "venue" table.
	VenueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "classify", Type: field.TypeJSON, Nullable: true, Comment: "分类"},
		{Name: "address", Type: field.TypeString, Nullable: true, Comment: "地址 省/市/区"},
		{Name: "address_detail", Type: field.TypeString, Nullable: true, Comment: "详细地址"},
		{Name: "latitude", Type: field.TypeString, Nullable: true, Comment: "维度"},
		{Name: "longitude", Type: field.TypeString, Nullable: true, Comment: "经度"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "联系电话"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "邮箱"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "照片", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "seal", Type: field.TypeString, Nullable: true, Comment: "公章", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "information", Type: field.TypeString, Nullable: true, Comment: "详情"},
	}
	// VenueTable holds the schema information for the "venue" table.
	VenueTable = &schema.Table{
		Name:       "venue",
		Columns:    VenueColumns,
		PrimaryKey: []*schema.Column{VenueColumns[0]},
	}
	// VenuePlaceColumns holds the columns for the "venue_place" table.
	VenuePlaceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "classify", Type: field.TypeInt64, Nullable: true, Comment: "分类"},
		{Name: "pic", Type: field.TypeString, Nullable: true, Comment: "pic | 照片", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "number", Type: field.TypeInt64, Nullable: true, Comment: "可容纳人数"},
		{Name: "type", Type: field.TypeInt64, Nullable: true, Comment: "球场1 场地2"},
		{Name: "is_show", Type: field.TypeInt64, Nullable: true, Comment: "是否展示:1展示;2不展示", Default: 1},
		{Name: "is_accessible", Type: field.TypeInt64, Nullable: true, Comment: "是否展示;1开放;2关闭", Default: 1},
		{Name: "is_booking", Type: field.TypeInt64, Nullable: true, Comment: "是否预约:1可预约;2不可", Default: 1},
		{Name: "information", Type: field.TypeString, Nullable: true, Comment: "详情"},
		{Name: "seat", Type: field.TypeJSON, Nullable: true, Comment: "座位"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// VenuePlaceTable holds the schema information for the "venue_place" table.
	VenuePlaceTable = &schema.Table{
		Name:       "venue_place",
		Columns:    VenuePlaceColumns,
		PrimaryKey: []*schema.Column{VenuePlaceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "venue_place_venue_places",
				Columns:    []*schema.Column{VenuePlaceColumns[16]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "venueplace_venue_id",
				Unique:  false,
				Columns: []*schema.Column{VenuePlaceColumns[16]},
			},
		},
	}
	// SysVenueSmsColumns holds the columns for the "sys_venue_sms" table.
	SysVenueSmsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "notice_count", Type: field.TypeInt64, Comment: "通知短信数量", Default: 0},
		{Name: "used_notice", Type: field.TypeInt64, Comment: "已用通知", Default: 0},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id", Default: 0},
	}
	// SysVenueSmsTable holds the schema information for the "sys_venue_sms" table.
	SysVenueSmsTable = &schema.Table{
		Name:       "sys_venue_sms",
		Columns:    SysVenueSmsColumns,
		PrimaryKey: []*schema.Column{SysVenueSmsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_venue_sms_venue_sms",
				Columns:    []*schema.Column{SysVenueSmsColumns[7]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysVenueSmsLogColumns holds the columns for the "sys_venue_sms_log" table.
	SysVenueSmsLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[1:正常,2:禁用]", Default: 1},
		{Name: "mobile", Type: field.TypeString, Comment: "手机号"},
		{Name: "biz_id", Type: field.TypeString, Comment: "BizId"},
		{Name: "code", Type: field.TypeString, Comment: "验证码"},
		{Name: "content", Type: field.TypeString, Comment: "内容"},
		{Name: "notify_type", Type: field.TypeInt64, Nullable: true, Comment: "通知类型[1会员;2员工]"},
		{Name: "template", Type: field.TypeString, Comment: "短信模板"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
	}
	// SysVenueSmsLogTable holds the schema information for the "sys_venue_sms_log" table.
	SysVenueSmsLogTable = &schema.Table{
		Name:       "sys_venue_sms_log",
		Columns:    SysVenueSmsLogColumns,
		PrimaryKey: []*schema.Column{SysVenueSmsLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_venue_sms_log_venue_smslog",
				Columns:    []*schema.Column{SysVenueSmsLogColumns[12]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MemberMemberContestsColumns holds the columns for the "member_member_contests" table.
	MemberMemberContestsColumns = []*schema.Column{
		{Name: "member_id", Type: field.TypeInt64},
		{Name: "contest_participant_id", Type: field.TypeInt64},
	}
	// MemberMemberContestsTable holds the schema information for the "member_member_contests" table.
	MemberMemberContestsTable = &schema.Table{
		Name:       "member_member_contests",
		Columns:    MemberMemberContestsColumns,
		PrimaryKey: []*schema.Column{MemberMemberContestsColumns[0], MemberMemberContestsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_member_contests_member_id",
				Columns:    []*schema.Column{MemberMemberContestsColumns[0]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "member_member_contests_contest_participant_id",
				Columns:    []*schema.Column{MemberMemberContestsColumns[1]},
				RefColumns: []*schema.Column{ContestParticipantColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MemberMemberBootcampsColumns holds the columns for the "member_member_bootcamps" table.
	MemberMemberBootcampsColumns = []*schema.Column{
		{Name: "member_id", Type: field.TypeInt64},
		{Name: "bootcamp_participant_id", Type: field.TypeInt64},
	}
	// MemberMemberBootcampsTable holds the schema information for the "member_member_bootcamps" table.
	MemberMemberBootcampsTable = &schema.Table{
		Name:       "member_member_bootcamps",
		Columns:    MemberMemberBootcampsColumns,
		PrimaryKey: []*schema.Column{MemberMemberBootcampsColumns[0], MemberMemberBootcampsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_member_bootcamps_member_id",
				Columns:    []*schema.Column{MemberMemberBootcampsColumns[0]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "member_member_bootcamps_bootcamp_participant_id",
				Columns:    []*schema.Column{MemberMemberBootcampsColumns[1]},
				RefColumns: []*schema.Column{BootcampParticipantColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MemberMemberCommunitysColumns holds the columns for the "member_member_communitys" table.
	MemberMemberCommunitysColumns = []*schema.Column{
		{Name: "member_id", Type: field.TypeInt64},
		{Name: "community_participant_id", Type: field.TypeInt64},
	}
	// MemberMemberCommunitysTable holds the schema information for the "member_member_communitys" table.
	MemberMemberCommunitysTable = &schema.Table{
		Name:       "member_member_communitys",
		Columns:    MemberMemberCommunitysColumns,
		PrimaryKey: []*schema.Column{MemberMemberCommunitysColumns[0], MemberMemberCommunitysColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_member_communitys_member_id",
				Columns:    []*schema.Column{MemberMemberCommunitysColumns[0]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "member_member_communitys_community_participant_id",
				Columns:    []*schema.Column{MemberMemberCommunitysColumns[1]},
				RefColumns: []*schema.Column{CommunityParticipantColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductTagsColumns holds the columns for the "product_tags" table.
	ProductTagsColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "dictionary_detail_id", Type: field.TypeInt64},
	}
	// ProductTagsTable holds the schema information for the "product_tags" table.
	ProductTagsTable = &schema.Table{
		Name:       "product_tags",
		Columns:    ProductTagsColumns,
		PrimaryKey: []*schema.Column{ProductTagsColumns[0], ProductTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_tags_product_id",
				Columns:    []*schema.Column{ProductTagsColumns[0]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_tags_dictionary_detail_id",
				Columns:    []*schema.Column{ProductTagsColumns[1]},
				RefColumns: []*schema.Column{SysDictionaryDetailsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductContractsColumns holds the columns for the "product_contracts" table.
	ProductContractsColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "contract_id", Type: field.TypeInt64},
	}
	// ProductContractsTable holds the schema information for the "product_contracts" table.
	ProductContractsTable = &schema.Table{
		Name:       "product_contracts",
		Columns:    ProductContractsColumns,
		PrimaryKey: []*schema.Column{ProductContractsColumns[0], ProductContractsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_contracts_product_id",
				Columns:    []*schema.Column{ProductContractsColumns[0]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_contracts_contract_id",
				Columns:    []*schema.Column{ProductContractsColumns[1]},
				RefColumns: []*schema.Column{ContractsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "menu_id", Type: field.TypeInt64},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0], RoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_role_id",
				Columns:    []*schema.Column{RoleMenusColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_menus_menu_id",
				Columns:    []*schema.Column{RoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserTagsColumns holds the columns for the "user_tags" table.
	UserTagsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "dictionary_detail_id", Type: field.TypeInt64},
	}
	// UserTagsTable holds the schema information for the "user_tags" table.
	UserTagsTable = &schema.Table{
		Name:       "user_tags",
		Columns:    UserTagsColumns,
		PrimaryKey: []*schema.Column{UserTagsColumns[0], UserTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_tags_user_id",
				Columns:    []*schema.Column{UserTagsColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_tags_dictionary_detail_id",
				Columns:    []*schema.Column{UserTagsColumns[1]},
				RefColumns: []*schema.Column{SysDictionaryDetailsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserVenuesColumns holds the columns for the "user_venues" table.
	UserVenuesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "venue_id", Type: field.TypeInt64},
	}
	// UserVenuesTable holds the schema information for the "user_venues" table.
	UserVenuesTable = &schema.Table{
		Name:       "user_venues",
		Columns:    UserVenuesColumns,
		PrimaryKey: []*schema.Column{UserVenuesColumns[0], UserVenuesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_venues_user_id",
				Columns:    []*schema.Column{UserVenuesColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_venues_venue_id",
				Columns:    []*schema.Column{UserVenuesColumns[1]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0], UserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_user_id",
				Columns:    []*schema.Column{UserRolesColumns[0]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_roles_role_id",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VenueRolesColumns holds the columns for the "venue_roles" table.
	VenueRolesColumns = []*schema.Column{
		{Name: "venue_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// VenueRolesTable holds the schema information for the "venue_roles" table.
	VenueRolesTable = &schema.Table{
		Name:       "venue_roles",
		Columns:    VenueRolesColumns,
		PrimaryKey: []*schema.Column{VenueRolesColumns[0], VenueRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "venue_roles_venue_id",
				Columns:    []*schema.Column{VenueRolesColumns[0]},
				RefColumns: []*schema.Column{VenueColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "venue_roles_role_id",
				Columns:    []*schema.Column{VenueRolesColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VenuePlaceProductsColumns holds the columns for the "venue_place_products" table.
	VenuePlaceProductsColumns = []*schema.Column{
		{Name: "venue_place_id", Type: field.TypeInt64},
		{Name: "product_id", Type: field.TypeInt64},
	}
	// VenuePlaceProductsTable holds the schema information for the "venue_place_products" table.
	VenuePlaceProductsTable = &schema.Table{
		Name:       "venue_place_products",
		Columns:    VenuePlaceProductsColumns,
		PrimaryKey: []*schema.Column{VenuePlaceProductsColumns[0], VenuePlaceProductsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "venue_place_products_venue_place_id",
				Columns:    []*schema.Column{VenuePlaceProductsColumns[0]},
				RefColumns: []*schema.Column{VenuePlaceColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "venue_place_products_product_id",
				Columns:    []*schema.Column{VenuePlaceProductsColumns[1]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysApisTable,
		BannerTable,
		BootcampTable,
		BootcampParticipantTable,
		CommunityTable,
		CommunityParticipantTable,
		ContestTable,
		ContestParticipantTable,
		ContractsTable,
		SysDictionariesTable,
		SysDictionaryDetailsTable,
		EntryLogsTable,
		SysLogsTable,
		MemberTable,
		MemberContractTable,
		MemberContractContentTable,
		MemberDetailsTable,
		MemberNoteTable,
		MemberProductTable,
		MemberProductCoursesTable,
		MemberProfileTable,
		SysMenusTable,
		SysMenuParamsTable,
		MessagesTable,
		OrderTable,
		OrderAmountTable,
		OrderItemTable,
		OrderPayTable,
		OrderSalesTable,
		ProductTable,
		ProductCoursesTable,
		SysRolesTable,
		ScheduleTable,
		ScheduleCoachTable,
		ScheduleMemberTable,
		SysTokensTable,
		SysUsersTable,
		SysUserTimePeriodTable,
		VenueTable,
		VenuePlaceTable,
		SysVenueSmsTable,
		SysVenueSmsLogTable,
		MemberMemberContestsTable,
		MemberMemberBootcampsTable,
		MemberMemberCommunitysTable,
		ProductTagsTable,
		ProductContractsTable,
		RoleMenusTable,
		UserTagsTable,
		UserVenuesTable,
		UserRolesTable,
		VenueRolesTable,
		VenuePlaceProductsTable,
	}
)

func init() {
	SysApisTable.Annotation = &entsql.Annotation{
		Table: "sys_apis",
	}
	BannerTable.Annotation = &entsql.Annotation{
		Table: "banner",
	}
	BootcampTable.Annotation = &entsql.Annotation{
		Table: "bootcamp",
	}
	BootcampParticipantTable.ForeignKeys[0].RefTable = BootcampTable
	BootcampParticipantTable.Annotation = &entsql.Annotation{
		Table: "bootcamp_participant",
	}
	CommunityTable.Annotation = &entsql.Annotation{
		Table: "community",
	}
	CommunityParticipantTable.ForeignKeys[0].RefTable = CommunityTable
	CommunityParticipantTable.Annotation = &entsql.Annotation{
		Table: "community_participant",
	}
	ContestTable.Annotation = &entsql.Annotation{
		Table: "contest",
	}
	ContestParticipantTable.ForeignKeys[0].RefTable = ContestTable
	ContestParticipantTable.Annotation = &entsql.Annotation{
		Table: "contest_participant",
	}
	ContractsTable.Annotation = &entsql.Annotation{
		Table:   "contracts",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysDictionariesTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionaries",
	}
	SysDictionaryDetailsTable.ForeignKeys[0].RefTable = SysDictionariesTable
	SysDictionaryDetailsTable.Annotation = &entsql.Annotation{
		Table: "sys_dictionary_details",
	}
	EntryLogsTable.ForeignKeys[0].RefTable = MemberTable
	EntryLogsTable.ForeignKeys[1].RefTable = MemberProductTable
	EntryLogsTable.ForeignKeys[2].RefTable = SysUsersTable
	EntryLogsTable.ForeignKeys[3].RefTable = VenueTable
	EntryLogsTable.Annotation = &entsql.Annotation{
		Table:   "entry_logs",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysLogsTable.Annotation = &entsql.Annotation{
		Table: "sys_logs",
	}
	MemberTable.Annotation = &entsql.Annotation{
		Table:   "member",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberContractTable.ForeignKeys[0].RefTable = MemberTable
	MemberContractTable.ForeignKeys[1].RefTable = MemberProductTable
	MemberContractTable.ForeignKeys[2].RefTable = OrderTable
	MemberContractTable.Annotation = &entsql.Annotation{
		Table:   "member_contract",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberContractContentTable.ForeignKeys[0].RefTable = MemberContractTable
	MemberContractContentTable.Annotation = &entsql.Annotation{
		Table:   "member_contract_content",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberDetailsTable.ForeignKeys[0].RefTable = MemberTable
	MemberDetailsTable.Annotation = &entsql.Annotation{
		Table:   "member_details",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberNoteTable.ForeignKeys[0].RefTable = MemberTable
	MemberNoteTable.Annotation = &entsql.Annotation{
		Table:   "member_note",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberProductTable.ForeignKeys[0].RefTable = MemberTable
	MemberProductTable.Annotation = &entsql.Annotation{
		Table:   "member_product",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberProductCoursesTable.ForeignKeys[0].RefTable = MemberProductTable
	MemberProductCoursesTable.ForeignKeys[1].RefTable = MemberProductTable
	MemberProductCoursesTable.Annotation = &entsql.Annotation{
		Table:   "member_product_courses",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberProfileTable.ForeignKeys[0].RefTable = MemberTable
	MemberProfileTable.Annotation = &entsql.Annotation{
		Table:   "member_profile",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	SysMenuParamsTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenuParamsTable.Annotation = &entsql.Annotation{
		Table: "sys_menu_params",
	}
	MessagesTable.Annotation = &entsql.Annotation{
		Table: "messages",
	}
	OrderTable.ForeignKeys[0].RefTable = MemberTable
	OrderTable.ForeignKeys[1].RefTable = SysUsersTable
	OrderTable.ForeignKeys[2].RefTable = VenueTable
	OrderTable.Annotation = &entsql.Annotation{
		Table:   "order",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderAmountTable.ForeignKeys[0].RefTable = OrderTable
	OrderAmountTable.Annotation = &entsql.Annotation{
		Table:   "order_amount",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderItemTable.ForeignKeys[0].RefTable = OrderTable
	OrderItemTable.Annotation = &entsql.Annotation{
		Table:   "order_item",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderPayTable.ForeignKeys[0].RefTable = OrderTable
	OrderPayTable.Annotation = &entsql.Annotation{
		Table:   "order_pay",
		Options: "AUTO_INCREMENT = 100000",
	}
	OrderSalesTable.ForeignKeys[0].RefTable = OrderTable
	OrderSalesTable.Annotation = &entsql.Annotation{
		Table:   "order_sales",
		Options: "AUTO_INCREMENT = 100000",
	}
	ProductTable.Annotation = &entsql.Annotation{
		Table:   "product",
		Options: "AUTO_INCREMENT = 100000",
	}
	ProductCoursesTable.ForeignKeys[0].RefTable = ProductTable
	ProductCoursesTable.ForeignKeys[1].RefTable = ProductTable
	ProductCoursesTable.Annotation = &entsql.Annotation{
		Table:   "product_courses",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	ScheduleTable.Annotation = &entsql.Annotation{
		Table:   "schedule",
		Options: "AUTO_INCREMENT = 100000",
	}
	ScheduleCoachTable.ForeignKeys[0].RefTable = ScheduleTable
	ScheduleCoachTable.Annotation = &entsql.Annotation{
		Table:   "schedule_coach",
		Options: "AUTO_INCREMENT = 100000",
	}
	ScheduleMemberTable.ForeignKeys[0].RefTable = ScheduleTable
	ScheduleMemberTable.Annotation = &entsql.Annotation{
		Table:   "schedule_member",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysTokensTable.ForeignKeys[0].RefTable = SysUsersTable
	SysTokensTable.Annotation = &entsql.Annotation{
		Table: "sys_tokens",
	}
	SysUsersTable.Annotation = &entsql.Annotation{
		Table:   "sys_users",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysUserTimePeriodTable.ForeignKeys[0].RefTable = SysUsersTable
	SysUserTimePeriodTable.Annotation = &entsql.Annotation{
		Table:   "sys_user_time_period",
		Options: "AUTO_INCREMENT = 100000",
	}
	VenueTable.Annotation = &entsql.Annotation{
		Table:   "venue",
		Options: "AUTO_INCREMENT = 100000",
	}
	VenuePlaceTable.ForeignKeys[0].RefTable = VenueTable
	VenuePlaceTable.Annotation = &entsql.Annotation{
		Table:   "venue_place",
		Options: "AUTO_INCREMENT = 100000",
	}
	SysVenueSmsTable.ForeignKeys[0].RefTable = VenueTable
	SysVenueSmsTable.Annotation = &entsql.Annotation{
		Table: "sys_venue_sms",
	}
	SysVenueSmsLogTable.ForeignKeys[0].RefTable = VenueTable
	SysVenueSmsLogTable.Annotation = &entsql.Annotation{
		Table: "sys_venue_sms_log",
	}
	MemberMemberContestsTable.ForeignKeys[0].RefTable = MemberTable
	MemberMemberContestsTable.ForeignKeys[1].RefTable = ContestParticipantTable
	MemberMemberBootcampsTable.ForeignKeys[0].RefTable = MemberTable
	MemberMemberBootcampsTable.ForeignKeys[1].RefTable = BootcampParticipantTable
	MemberMemberCommunitysTable.ForeignKeys[0].RefTable = MemberTable
	MemberMemberCommunitysTable.ForeignKeys[1].RefTable = CommunityParticipantTable
	ProductTagsTable.ForeignKeys[0].RefTable = ProductTable
	ProductTagsTable.ForeignKeys[1].RefTable = SysDictionaryDetailsTable
	ProductContractsTable.ForeignKeys[0].RefTable = ProductTable
	ProductContractsTable.ForeignKeys[1].RefTable = ContractsTable
	RoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
	UserTagsTable.ForeignKeys[0].RefTable = SysUsersTable
	UserTagsTable.ForeignKeys[1].RefTable = SysDictionaryDetailsTable
	UserVenuesTable.ForeignKeys[0].RefTable = SysUsersTable
	UserVenuesTable.ForeignKeys[1].RefTable = VenueTable
	UserRolesTable.ForeignKeys[0].RefTable = SysUsersTable
	UserRolesTable.ForeignKeys[1].RefTable = SysRolesTable
	VenueRolesTable.ForeignKeys[0].RefTable = VenueTable
	VenueRolesTable.ForeignKeys[1].RefTable = SysRolesTable
	VenuePlaceProductsTable.ForeignKeys[0].RefTable = VenuePlaceTable
	VenuePlaceProductsTable.ForeignKeys[1].RefTable = ProductTable
}
