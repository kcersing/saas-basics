// Code generated by hertz generator.

package banner

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	banner "saas/idl_gen/model/banner"
	base "saas/idl_gen/model/base"
)

// CreateBanner .
// @Summary		创建Banner Summary
// @Description	创建Banner Description
// @Param			request	body	banner.BannerInfo	true	"query params"
// @Success		200		{object}	utils.Response
// @router /service/banner/create [POST]
func CreateBanner(ctx context.Context, c *app.RequestContext) {
	var err error
	var req banner.BannerInfo
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateBanner .
// @Summary		更新Banner Summary
// @Description	更新Banner Description
// @Param			request	body	banner.BannerInfo	true	"query params"
// @Success		200		{object}	utils.Response
// @router /service/banner/update [POST]
func UpdateBanner(ctx context.Context, c *app.RequestContext) {
	var err error
	var req banner.BannerInfo
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// BannerList .
// @Summary		Banner列表 Summary
// @Description	Banner列表 Description
// @Param			request	body		base.PageInfoReq	true	"query params"
// @Success		200		{object}	utils.Response
// @router /service/banner/list [POST]
func BannerList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.PageInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateBannerShow .
// @Summary		更新Banner显示状态 Summary
// @Description	更新Banner显示状态 Description
// @Param			request	body		base.StatusCodeReq	true	"query params"
// @Success		200		{object}	utils.Response
// @router /service/banner/show [POST]
func UpdateBannerShow(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.StatusCodeReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// DelBanner .
// @Summary		删除Banner Summary
// @Description	删除Banner Description
// @Param			request	body		base.IDReq	true	"query params"
// @Success		200		{object}	utils.Response
// @router /service/banner/del [POST]
func DelBanner(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.IDReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
