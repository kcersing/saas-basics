// Code generated by Kitex v0.9.1. DO NOT EDIT.

package memberservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	base "rpc_gen/kitex_gen/base"
	member "rpc_gen/kitex_gen/member"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	CreateMember(ctx context.Context, req *member.CreateOrUpdateMemberReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	UpdateMember(ctx context.Context, req *member.CreateOrUpdateMemberReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberInfo(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberList(ctx context.Context, req *member.MemberListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	UpdateMemberStatus(ctx context.Context, req *base.StatusCodeReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberSearch(ctx context.Context, req *member.MemberSearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberProductList(ctx context.Context, req *member.MemberProductListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberPropertyList(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberProductDetail(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberPropertyDetail(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberPropertyUpdate(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberContractList(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberProductSearch(ctx context.Context, req *member.MemberProductSearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
	MemberPropertySearch(ctx context.Context, req *member.MemberPropertySearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfoForClient(), options...)
	if err != nil {
		return nil, err
	}
	return &kMemberServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kMemberServiceClient struct {
	*kClient
}

func (p *kMemberServiceClient) CreateMember(ctx context.Context, req *member.CreateOrUpdateMemberReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateMember(ctx, req)
}

func (p *kMemberServiceClient) UpdateMember(ctx context.Context, req *member.CreateOrUpdateMemberReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateMember(ctx, req)
}

func (p *kMemberServiceClient) MemberInfo(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberInfo(ctx, req)
}

func (p *kMemberServiceClient) MemberList(ctx context.Context, req *member.MemberListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberList(ctx, req)
}

func (p *kMemberServiceClient) UpdateMemberStatus(ctx context.Context, req *base.StatusCodeReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateMemberStatus(ctx, req)
}

func (p *kMemberServiceClient) MemberSearch(ctx context.Context, req *member.MemberSearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberSearch(ctx, req)
}

func (p *kMemberServiceClient) MemberProductList(ctx context.Context, req *member.MemberProductListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberProductList(ctx, req)
}

func (p *kMemberServiceClient) MemberPropertyList(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberPropertyList(ctx, req)
}

func (p *kMemberServiceClient) MemberProductDetail(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberProductDetail(ctx, req)
}

func (p *kMemberServiceClient) MemberPropertyDetail(ctx context.Context, req *base.IDReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberPropertyDetail(ctx, req)
}

func (p *kMemberServiceClient) MemberPropertyUpdate(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberPropertyUpdate(ctx, req)
}

func (p *kMemberServiceClient) MemberContractList(ctx context.Context, req *member.MemberPropertyListReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberContractList(ctx, req)
}

func (p *kMemberServiceClient) MemberProductSearch(ctx context.Context, req *member.MemberProductSearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberProductSearch(ctx, req)
}

func (p *kMemberServiceClient) MemberPropertySearch(ctx context.Context, req *member.MemberPropertySearchReq, callOptions ...callopt.Option) (r *base.NilResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.MemberPropertySearch(ctx, req)
}
